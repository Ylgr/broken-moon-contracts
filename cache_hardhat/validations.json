{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "97c53592610637f1df38f328736f34c222d6784b025f98222327402e15f78c55",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "d98e874bb43bfe04c0d3e087080f072fc24373c5a7d2ce373a940157117ea1e6",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "dfb8e72b3dcb9293a6da881204de2b1beb58e2165dd689f9632bcaf9595d8943",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "a89ec688cee431a011321c698b241484932525abd59ed0ada59a103c49d44062",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "c64e4d924290ca62a8275b8d6615a713f4507de8af641428bc265614f708a460",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "34ca1ba371c2c6d3e4e24ebec0fc58d17a3523cd61128aee21d5336c45e39a27",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "2f8cdd5606b1239d7b3467366ece4d60c99467eb095d9df0ee7e303c0c73ab90",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "87bc767670ea530f637e6ab41312b248e2cea90ec546d768311450c1158b55f5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "803dbb66da8c844831d86cb71264a6d3a6fee87b406ba92f16926843291711af",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "0278ee200687480bf6d76eb44858a9a96f47e4f8411931876a7c0af2f65927f6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "cdfccd7f531297349af5967fbfedcf3009c013c8ad54c657f2b0b3eb88d3ef37",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "7c2d3f03773ef3e02c35ef56a0232a4e43843209537a82b39e33c24bee43e154",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "2def1f93997d967eaf0c954fcf2e0bdb4a2b2bd203325e4d92d263aec28c0282",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "79d863071d1c7647c36f810d7289903db2068238767521e3f5cbb6cbed5d5f8d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "0c4678925f2e2fb43969963eddd4e09cfa17eda4c04fea986a2777d6b84af556",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "6dba52c6b9c3a35b140fcc16615233c17908d8a8f912803370b1cf1a0ea30c1b",
          "withoutMetadata": "b6215961baa30b28f268635865a2722ea74d74422b4afd7e0ab97887ce0b8314",
          "linkedWithoutMetadata": "b6215961baa30b28f268635865a2722ea74d74422b4afd7e0ab97887ce0b8314"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "1634050d355ab33de066a5521ded3c321115cbe72c28d5dece13314ff469a1c8",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "afb197c7d98c8ba001b2f552b1c105111c44efde3d3f2a6044d5493eae15c5af",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "1bd3aef0d6b1052ecbe3718bd4b0a7f18d4c742551164c6986ae7e3c75c1e9aa",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "b3df1abffaf3b20682e8e22c7a105159cb39be54848edd27c87cd7b7fde50461",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "63f52f5c8b0bad96ce96c2cb89139afa9efe21e6de504f841c3fb08d14d6ca38",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "8758044262e57f41f4e1406d916313f76ef12d20525440f2d0173795dfcd369c",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "f6634fe306eb780514a39c65389fc7d65fe91d73eb1d11e8085daabb7162b174",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "3d68d8788e9e4cad0ef553a5ebf8e265a082576284d35eb529b08a6a90a51b7c",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "67045e896870d3407c878f3bed9be62087d436f6a96057b07ab162f67d2f979f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "3fcd38963e819106f7ecdf5978a0223a72b1b9cae642ce974d88e194568bf51b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "d34544b7f85d294943393dd3a0c22465e6bf40cd26cf7605b4f06d5d2f1154c7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "f12a0d0b3a16d1e28a11759f6c4a300f71ff20f6c27507c3ece34c88040169a4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:25",
        "version": {
          "withMetadata": "240bb83f3cbc0b293f82e4c51ba11b193e0417a12c5c124027d92b48238927dd",
          "withoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727",
          "linkedWithoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:34"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "5acb06b0521e0c052cb5e8087dc762be2f27abadc814a143337904c74c8b16aa",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)10906_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)10906_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:22",
        "version": {
          "withMetadata": "0a7c164200f832e2fd54f45ae2be0df854165144dda67cbf1e8a1e0f02cc8104",
          "withoutMetadata": "2d6549c672aa8c948edb131ffa99a8f8d4b17e478d7e317946fc7c7a61b38562",
          "linkedWithoutMetadata": "2d6549c672aa8c948edb131ffa99a8f8d4b17e478d7e317946fc7c7a61b38562"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "540d9d89aed7b18df1e027f3d99b46b4b4c80419506d229c5562981b92cb9210",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "ce0eb76e52fd6d48d968702fa31902e16b0ff4bdb502886e90eb8f7d184c8eda",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "ae8a2769044bbe799ecc217151b34a44ff11dfe3fd485253400b5cc1c127875f",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "be43d479946c2cc5554f59c60a2d5cbf03fedde8650cc97878f176f6eb0b0bcb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:5",
        "version": {
          "withMetadata": "297617ad5a550c8b3ac3576e223bb5e30c5f676b313893acb4bb349c4aad03e2",
          "withoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca",
          "linkedWithoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A": {
        "src": "src/test/ERC721A.sol:36",
        "version": {
          "withMetadata": "c7d4624d1edd890c0e84ef190d7a259fb0bb093898e31cd4eefbe0e44150e68c",
          "withoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847",
          "linkedWithoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847"
        },
        "inherit": [
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "src/test/ERC721A.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "src/test/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/FreeToMintNft.sol:FreeToMintNft": {
        "src": "src/test/FreeToMintNft.sol:7",
        "version": {
          "withMetadata": "69e5d0ae7ef26ea1840c0e107b1c9b239c53b57645c6326d39767028e08c3596",
          "withoutMetadata": "69e5d0ae7ef26ea1840c0e107b1c9b239c53b57645c6326d39767028e08c3596",
          "linkedWithoutMetadata": "69e5d0ae7ef26ea1840c0e107b1c9b239c53b57645c6326d39767028e08c3596"
        },
        "inherit": [
          "src/test/ERC721A.sol:ERC721A",
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "()",
          "tokenURI(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeToMintNft",
            "src": "src/test/FreeToMintNft.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseExtension",
            "src": "src/test/FreeToMintNft.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            },
            {
              "label": "baseExtension",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "FreeToMintNft",
              "src": "src/test/FreeToMintNft.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/IERC721A.sol:IERC721A": {
        "src": "src/test/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "b726f4bbe679cd59eb7a15276948c4e5db72058aa89433e8fae1d74d0c02d468",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "686dc2c3738ddc5583f74b6c27a614461a123f2acd6e83baafd46aeb1885b6b2",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/Nft.sol:Nft": {
        "src": "src/test/Nft.sol:6",
        "version": {
          "withMetadata": "979dcb4b15b5786b1f5384816dfd4acc64f267d7c3d86928f6c66b22a2dfc28a",
          "withoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1",
          "linkedWithoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Nft",
            "src": "src/test/Nft.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "36ace0b18cf9aec704a16066353bf4c9ae9458923c2524ae71c98a2be5b2aeaa",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "946d055ff7608f0dd9686e869de65745fab27d8bcf622838a66e5611db10c65b",
          "withoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801",
          "linkedWithoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addPrime(address,uint256)",
          "removePrime(uint256)",
          "setBurnPercentage(uint8)",
          "withdraw(address,uint256)",
          "withdrawNFT(address,uint256)",
          "execute(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "primes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:23"
            },
            {
              "label": "burnPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage": {
              "label": "struct Treasury.PrimeInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)2597": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_struct(PrimeInfo)18306_storage": {
              "label": "struct Treasury.PrimeInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC721)2597",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "a012dcd2503ae54560c42bfb19a12bb01f451d784e20df8f04b64d9f7d44bd0e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "cac9643e06117165efcb68f5f36bc2b62c6967280b9e160fe6f19f77ad7ec589",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "98f8da8ec4aeebbd10fccae827e1f7a451661461de31e54a6548d4908eede0a7",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "02c5f698c36c39b428558faa851921c61647ac77ab036c93df5bdcd3d73889ee",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "261ed1f5d3cc64d734d2553bdb136ba45313a2a3b92ca2fd054696986fc58b28",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "c8c95e9abbcbc0fa5a8efcbc806d17a8ec8349154856fa797d3ff80c14138120",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "39c4fdab7a81ad4b32b916f076ab0fbe05ba6cb3f84baf0db84606dbbc195212",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "f17ddb21361292049a8600fbd3912f5518ee3dde4fc2e13acf01f920cc3ba2ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "2b868b7bf9b7bb73cfa96c8030a1f0440a28d247a8b45ba2b4df655e499d1716",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "c20b5f404294bcd38bacb5b25f64219d3bcd09c8063e698e4d5218a62d81fd72",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "e7bd69cd48784abbbd892faf24fe1cee9d0d443dc146a87fb481a935c054bae9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "a41ee2be806f6d5bdfc1e416bf61f16a37fdfdd5b43669b8c6f6b3a64d7b98fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "7c9b2f87478ce2bd65758b59c94bf0a6d6fe4b19238d0652d2dbba3b7f48b371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "c0dac20a78bf21084a1f3110c53f617438f85cb0cbaea37488c36df3e2cb163b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "1b6cf0b14c014faab665fa3747d00f45012997d60a15745c040002dcaf4c49ce",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "40fac7e1737e94ebc25df6c6eb07e04a89f9b33e3f7113fd2d981c2bc562bd5c",
          "withoutMetadata": "47209b039b383002d17f0bb7df10ad4d4e8282008de889c69e75c48b855ab762",
          "linkedWithoutMetadata": "47209b039b383002d17f0bb7df10ad4d4e8282008de889c69e75c48b855ab762"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "4ced2618199d1370bac419abf9747571b74d3cca43a6e887c8c51ae1c2f77410",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "ed79205bb4e3179ccde97e6a26b698914d4f41cc091d0becc7a9ccddad6309ca",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "88c96163162fa3997fa6638f50c39e0d7d10cd2903dfd48aec084355158a297b",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "096c84471bcec8d056e04912a9dd2a9b54a0b98423ba19f2737f2f11fdbb948e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "7d5d7e4bb03bee62c23dcd999f5f85f10c76d8f8297760504ff6071bcb297087",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "953a34ccb81d196f1855d6da3d9d115bef9ee7920e5a96d0a9810b3c9b13bc8d",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "8fbd7eee98fe95f28ffa02a1b6e711ca21c8ce0b89fbd0b844bca9e247463c97",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "edad6e60db38f63618ef17865210a0de8473c8df7b0b4632367b5a70b3d797d5",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "35856af58f245ef224a3b43d85576ae1dea94eb61f2ec1264e125bb94dff4135",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "aedbbf35648a2fc8084b3dadc8f4c86534c10398334e728502198d04b5b9fe5c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "d119720084506078cb637255012e5db5eac701d8e5353840e498a7222b470be2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "c2ef7520db0be78b8d9ef6f1dc6b284a4f491be8e80495a2ad654a77916f552a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:25",
        "version": {
          "withMetadata": "96876a91a73bef2557bf710544713e08f4e7985c68a975ad39a13bc84317c10d",
          "withoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727",
          "linkedWithoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:34"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "1a15267250aa25a7ed6ba477393f2ef6cf046a6163b9d400491114ebcd69c1b5",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)10906_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)10906_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:22",
        "version": {
          "withMetadata": "2f9d1964bb9e26aa4cdc2b533ed6ae08f4a3095ceb72d1ae7dc65a23216c0d3c",
          "withoutMetadata": "a7dace754ad419cc29024c501d236bd49c887729571f3d2c9e9e0ae64f96b291",
          "linkedWithoutMetadata": "a7dace754ad419cc29024c501d236bd49c887729571f3d2c9e9e0ae64f96b291"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "a75112be5d3ec3797c32a2f347b7f06ffa193ba9c17b5cb77ea9b7f3de2331d5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "eb824a708462e08e11de12d3579e7cc16a7ed2f59a1de11caa551e0d84509b44",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "7297cc1f9b598b9f77424e1edfe51f5c8ac75fa320ca4b8a22ca3c7c0d8a9462",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "3a048a159f79bc8a64d43f33c118150db75aa589e1f704fd5bd9e1b9e0377318",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:5",
        "version": {
          "withMetadata": "3fd6a550da656547bb6802e6f48a0d5209b7e47b4cc95be44515239142a26112",
          "withoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca",
          "linkedWithoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A": {
        "src": "src/test/ERC721A.sol:36",
        "version": {
          "withMetadata": "063cb7a16f7bdfd6143a5efae69b646035e99dcd28f1bce680340a8478ac710d",
          "withoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847",
          "linkedWithoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847"
        },
        "inherit": [
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "src/test/ERC721A.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "src/test/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/FreeToMintNft.sol:FreeToMintNft": {
        "src": "src/test/FreeToMintNft.sol:7",
        "version": {
          "withMetadata": "9b96353f9d93c883427f3cbe5f04decc61858c830b4c8fe0684f0f81f7372342",
          "withoutMetadata": "9b96353f9d93c883427f3cbe5f04decc61858c830b4c8fe0684f0f81f7372342",
          "linkedWithoutMetadata": "9b96353f9d93c883427f3cbe5f04decc61858c830b4c8fe0684f0f81f7372342"
        },
        "inherit": [
          "src/test/ERC721A.sol:ERC721A",
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "()",
          "tokenURI(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeToMintNft",
            "src": "src/test/FreeToMintNft.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseExtension",
            "src": "src/test/FreeToMintNft.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            },
            {
              "label": "baseExtension",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "FreeToMintNft",
              "src": "src/test/FreeToMintNft.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/IERC721A.sol:IERC721A": {
        "src": "src/test/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "122e2852abbcadaac5f0b5a54baa62323fcfc5b1c7d99520c0768a4e128e4b2f",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "0316f39fc9b0385d4e5b522c72b7776725246d5c71bb84c65d3202757559090b",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/Nft.sol:Nft": {
        "src": "src/test/Nft.sol:6",
        "version": {
          "withMetadata": "9e6244e914ab4581a508c665a8d2511dd6c640d0439e07ab8be613ada9b165e5",
          "withoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1",
          "linkedWithoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Nft",
            "src": "src/test/Nft.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "a26080f38311225edf8b6859b7f4da27a7b74a31c8078bc04e0dc19822e3541e",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "d9dd0f27ed837f76d09bee26f375db76f216c9d93e52e77f258453d5efa53bb3",
          "withoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801",
          "linkedWithoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addPrime(address,uint256)",
          "removePrime(uint256)",
          "setBurnPercentage(uint8)",
          "withdraw(address,uint256)",
          "withdrawNFT(address,uint256)",
          "execute(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "primes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:23"
            },
            {
              "label": "burnPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage": {
              "label": "struct Treasury.PrimeInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)2597": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_struct(PrimeInfo)18306_storage": {
              "label": "struct Treasury.PrimeInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC721)2597",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "440e497d029dc8a4a157b27c8527cd56d90c1a1a94882bedb50e4037c064e191",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "4e3ed37e0ec2d9285f086c4a8a87fce6ee08258719b4e5a58c134eeec7a1586a",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "6bd22fc732cb760c949aa24a7a774d1dc6f0bcf2d1741013c725cb5a342faf08",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "2458312ea5918b02ac2743e28bb5acc72c4509ff65db94ff450d8282e67b22ce",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "23cbf8c509acd3e47e080b3ac1e5f81509deec9524ba78490835a33f5f6f0440",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "49eb16bc56e6ef01b1ab04ebaba0407f03c0c8b2a2892e0fce8eade1e60ae8cc",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "05bba6aee7baf6d0292d612f4b766158a8db9860add1f4eafb8af5e8b869b7a0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "9daaf4f327d0309742c7afb4754a0be6b982c0c4531c3186558aa9df8f7736cd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "6072e5dc1a6f9173b669125fa7bb4ebdf794028c313152161cd4e2a58b11f2cd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "f28a420da404fcf69bda56f1fba9fdc295bcce35023eb80ab8546f1c3e6b8ba8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "4d6ee28f11ea469287597085a3c7fa9ce456923379e0c6386152d1c5e26e4860",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "1bc778fd8823cc8e7aa6968e49770100ed2648475e0c1390791a7d474e05ea2d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "b2ed30fe8fc79787bdf1cbb2a4c8dc59f5888d29698df0807e7b0a53a13d4a77",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "cff01d0a55a71ccf49195a4e760b9a3d270e0c0d2535f61962294a6cc969ea1d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "1a44ad47a02b3d8a8a6c9fee237f755ce998dbaa0ea0277baecd9fdf7efb9725",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "f9fc95877b194e135731e6dfec37de17ead7409c6ca72a121ddf6d939603cf91",
          "withoutMetadata": "e65becc08f6b6feb44285b18aeb3c5e7140c7d2f2f45a4c7a2c1f1061e978463",
          "linkedWithoutMetadata": "e65becc08f6b6feb44285b18aeb3c5e7140c7d2f2f45a4c7a2c1f1061e978463"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "0eef181803bd7ac04f6710835b000b94f1386351b365c48c3730161d777e8c3e",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "83b0bbfc9476300d06958b475b34c87fd96c73abaf7e6b56bc4808bc2b4d4ebe",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "608fded2aad2d316965a4673e1921a63e354543dd509719a9f48fa85411ee57b",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "57f3e7d8c923cf73d03f000f9119667466379c85d2811f42b67452105f85344f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "9776443a12959f2cfaa343c91e5a5a7e0282d6cf04f34a3b23ff68f8115884ea",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "76f9266440a8fcd06b92709a6640a56d30b98de6f211b36adc6dfeb39f6df82c",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "e07fa99d3f5ef6f41ece1a6b1885a34a08c1dc7a895eb660b2c1f505807ebfd3",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "ff429873442b3d0826dc33b7c19cf63ee2b27720c9b76cdcb5c22cf9d958e078",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "811ef47f3e4fba3993101641534b66712aaa3a505b074b23e84e6cd72ba86c12",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "e19af18d2498ad3021685f3c74b849f404d2d706b693b7bbc210361b8b8816f8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "ad5cd7203bba0bf52a5bc0423168458efa9c3bbb10db96f5310ea0ed92ca294f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "958aff9805a4459f245b45d96a361b398a56b032bc05615e4df8c53eda648703",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:25",
        "version": {
          "withMetadata": "a98e687ec7a40f6b541d82a595ccd1c28476c3a34537cfb28c9ed37ac2f82d69",
          "withoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727",
          "linkedWithoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:34"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "216b265f88a7c875d3051d98d2491146bbc4d9c87dd2b2f9c54ea5dd1fffaca1",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)10906_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)10906_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:22",
        "version": {
          "withMetadata": "4d6308ebc7368b36c0869ebff4aaa65827850639a4e25aba43cece8b7f572df2",
          "withoutMetadata": "8a2874a8f77bc88fb1343c34eb1df57238632227c1a0108360ad4807edf5888f",
          "linkedWithoutMetadata": "8a2874a8f77bc88fb1343c34eb1df57238632227c1a0108360ad4807edf5888f"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "85166486475cf1ad8bb50b9a4d6a25596488f5bb055709e1fc8c0c86993046ad",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "26cc0e4f96bb60dd9de812fc4d60930062dcaf8d61959580141b73bd1753500f",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "58f469a56124b85fc06ea8a7942f84e243070cace1736a744320fb6e84749e65",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "853a340a54bb1ae1d0dd19983077fa4e29c6b23bf9d4231261430999fdd16076",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:5",
        "version": {
          "withMetadata": "3ed7fbe19b9a55173af098c6776bc1cf0442d931979539aad5e790474d26c65d",
          "withoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca",
          "linkedWithoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A": {
        "src": "src/test/ERC721A.sol:36",
        "version": {
          "withMetadata": "3a98f76c6cf58d2608389338fe104611a1f8a62e180f59e4ad7d2a5715d87b88",
          "withoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847",
          "linkedWithoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847"
        },
        "inherit": [
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "src/test/ERC721A.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "src/test/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/FreeToMintNft.sol:FreeToMintNft": {
        "src": "src/test/FreeToMintNft.sol:7",
        "version": {
          "withMetadata": "8d2e492fadb88baf3b17a00493008794b83cffacf1ce789867b7a71e103b5515",
          "withoutMetadata": "8d2e492fadb88baf3b17a00493008794b83cffacf1ce789867b7a71e103b5515",
          "linkedWithoutMetadata": "8d2e492fadb88baf3b17a00493008794b83cffacf1ce789867b7a71e103b5515"
        },
        "inherit": [
          "src/test/ERC721A.sol:ERC721A",
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "()",
          "tokenURI(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeToMintNft",
            "src": "src/test/FreeToMintNft.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseExtension",
            "src": "src/test/FreeToMintNft.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            },
            {
              "label": "baseExtension",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "FreeToMintNft",
              "src": "src/test/FreeToMintNft.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/IERC721A.sol:IERC721A": {
        "src": "src/test/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "eccaaa71be3a8c7b4a169ae507f3f944d48d7b0d5babe1d0adf64ecf59551ba1",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "a0705181debd4b14a2cc18087a7b7466538451f6f1fa50241e6c0e011af5f366",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/Nft.sol:Nft": {
        "src": "src/test/Nft.sol:6",
        "version": {
          "withMetadata": "23cd5a7f6c7f9fc9ea5d9a72bfec83978e156d1d7049aff591a14c3a42cad60b",
          "withoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1",
          "linkedWithoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Nft",
            "src": "src/test/Nft.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "373ef4336903cdd7fdf5e919f33a111a0b301e5e4a4c27ec39f5ce647d3ecc75",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "688c9dc7ac26eaf7ac12f62dde67ef2603a12e152fb55cb6ed40607e2d0100ea",
          "withoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801",
          "linkedWithoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addPrime(address,uint256)",
          "removePrime(uint256)",
          "setBurnPercentage(uint8)",
          "withdraw(address,uint256)",
          "withdrawNFT(address,uint256)",
          "execute(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "primes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:23"
            },
            {
              "label": "burnPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage": {
              "label": "struct Treasury.PrimeInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)2597": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_struct(PrimeInfo)18306_storage": {
              "label": "struct Treasury.PrimeInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC721)2597",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "38c0ee4c636f0fa396a92fe8fefcc85836e4ea846c1e47f5ae9255ead4cf9b39",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "b11e4427306abb68e3a3056b2c0f54c35619e5ffffb2d0484468eace25dd809d",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "defdc54348b7b8c5f23ee8230c46036509858b99ea2456435725289e2d4e2517",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "800dc10ee0446ec74c6cdb309a9200b43da2c7a70551b47e4f85b0c94dd1982a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "77b00c90102c5c6972fe53c484cfef7304e040cd725ed846210a1fc1bd32bc58",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "b5be7349d8dbae6970bb120adbc50938dcd4348d329342e0b397320ba092cb72",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "014c4bd940934755aec1c649b7a71d1c7ec8deb220255e9063366edcade16867",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "b28334f04cd4ba273bac08f85667d015488259fdd9f9e5de6dbbfed016db0525",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "a20425777fa1d21f40e55c9a33c4b4c9f04ad43b6bee78e7a309b67f59b02745",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "795902074a4677e2ca743bbb4bd99e0bd23e2c27f978f1512410e415677e1c5a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "36a7bfd57cd61950a8e1f42d904e72c38b2f0d54a856ac22d15defd19a8fbcf9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "bcb7107f845fb4d7dd4a95ce8a8392e5688da37aa8b710517d7ad5e2c7d38f76",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "8f90af361c5794a342def41f3a1e80594be64dcad4b8a003c7194a36285d88fd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "a9b31a68b0709f99d83bb85fbc6893dfeed0f3b659353f80226781272137b348",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "233e8ea8df68637d242f35d725abbebad50d9ce287b96ef715d8ed06e220c263",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "ed61034e7cd3c6883ebd25c0c47009df2ba17ce07d99305a5d349abb1a4e8941",
          "withoutMetadata": "e6077341086e693b6da4f5015f36d36dd09253e6a5ef10cd7fec42947782a161",
          "linkedWithoutMetadata": "e6077341086e693b6da4f5015f36d36dd09253e6a5ef10cd7fec42947782a161"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "c7eae5883bad5c54358462b169c0ebaa81b4d53c64366fdb0006299ec260e3f8",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "563b59ae07d24e45f6af70ac89b1c45dc3275ed8e43b6c20b6c4957bd29e3e19",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "e5efd3fe5e521ada30da9ee1f71fe1f6213f5ea384bfe5052c3920e76969769e",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "e807974d9fc22624804d3e6466597be5f7ea0cf42278260915ac4dd6d86d2f25",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "e650707779284a08894de2e027ceeccfa3759b52725d4c5a6e65bcb9ecb2de8d",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "4eb897fef5d31a6281cf3c356607aec44755024e04a6b39234bcba142ab64dfb",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "f410cc5a0288d1cf5c8d2c06c762b77d1851e896afb74c1b1173adcb3061971d",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "462a797c5d1b2e33182be0d532d9e2ea30bb804fe41cb5fb64391440cb990705",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "eca941330ee3b6f62a2173c16104c34818a2187acaad93dfab7a9bb601138c72",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "1ad73f5fa28199c14e726d51fd6699db62d37c494c2819a5e92f0f29ea9ba04a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "ec5a960528017c08e4f6265e3aaa7239afb1e4f57adfa055769b20d2290088dd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "8db3edda92838eb1e35ec5fbbbdd3224aadd3b03a1383fccd2e674f29e1a306b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:25",
        "version": {
          "withMetadata": "d2aad49ea94d800a8254869d03df5a41aa42e84d3465a807d1dd93fe1c285d78",
          "withoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727",
          "linkedWithoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:34"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "8d71cbe20cd528a1c216d29cc4809565e59cd144a202794882aa0634ad21250d",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)10906_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)10906_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:22",
        "version": {
          "withMetadata": "6c4277acb68ae7d4ed2b94f73ecc0ba47bbc6b88650d742d93a8c95fd36df654",
          "withoutMetadata": "00cf02ea47ca2876cd35148f4fa328b7823239d17d65b28c4e293e648aa66f5b",
          "linkedWithoutMetadata": "00cf02ea47ca2876cd35148f4fa328b7823239d17d65b28c4e293e648aa66f5b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "97fd105d5e9ce3375225bbce36f38f4c4ebea07793be26676ac7686e42fb5e9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "df859960fa0c346c123b403af59280871509809675e914d2b9d43f1819e4aacc",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "3163f9061c4267cd21c71ef4b0e70ecb707b56c74779e631a11a36df80871861",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "b0371b79993984ee016633931b182dce30aae428728b037677a94ccd2ab9b831",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:5",
        "version": {
          "withMetadata": "93268a2fd493ebf10d971e60c79f23d3c87ce0aa946738f061abec489d0f9f37",
          "withoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca",
          "linkedWithoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A": {
        "src": "src/test/ERC721A.sol:36",
        "version": {
          "withMetadata": "d388581932a39418e9fab26cf3126cc75577eba41cf91b644cd9a80665d71c1b",
          "withoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847",
          "linkedWithoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847"
        },
        "inherit": [
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "src/test/ERC721A.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "src/test/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/FreeToMintNft.sol:FreeToMintNft": {
        "src": "src/test/FreeToMintNft.sol:7",
        "version": {
          "withMetadata": "628f5f714e85abe75e751153427f5e384db1bdb56c4d50769e1f1b8cf3b5f8c3",
          "withoutMetadata": "628f5f714e85abe75e751153427f5e384db1bdb56c4d50769e1f1b8cf3b5f8c3",
          "linkedWithoutMetadata": "628f5f714e85abe75e751153427f5e384db1bdb56c4d50769e1f1b8cf3b5f8c3"
        },
        "inherit": [
          "src/test/ERC721A.sol:ERC721A",
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "()",
          "tokenURI(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeToMintNft",
            "src": "src/test/FreeToMintNft.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseExtension",
            "src": "src/test/FreeToMintNft.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            },
            {
              "label": "baseExtension",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "FreeToMintNft",
              "src": "src/test/FreeToMintNft.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/IERC721A.sol:IERC721A": {
        "src": "src/test/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "03c7eba258111faff70b217c3203059a5a13ce6e9e11961cc63030743e8f2fac",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "b6839805aecdc18d300fff01296b90ffc9393a0d219b08e48b182fa5f6e76447",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/Nft.sol:Nft": {
        "src": "src/test/Nft.sol:6",
        "version": {
          "withMetadata": "7ff97709b2925c5637cedb7e88ec17514580bf64371d36b19a454d813f1623e2",
          "withoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1",
          "linkedWithoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Nft",
            "src": "src/test/Nft.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "b1954f13018a22ce08b131d32c05ac07c3ffa7a438bdf27adac74cbc1c2d0272",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "cd1844f921fdd5c6a998f38c853848700553061734460fd4827dd3632c39829a",
          "withoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801",
          "linkedWithoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addPrime(address,uint256)",
          "removePrime(uint256)",
          "setBurnPercentage(uint8)",
          "withdraw(address,uint256)",
          "withdrawNFT(address,uint256)",
          "execute(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "primes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:23"
            },
            {
              "label": "burnPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage": {
              "label": "struct Treasury.PrimeInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)2597": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_struct(PrimeInfo)18306_storage": {
              "label": "struct Treasury.PrimeInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC721)2597",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "24bf97797e45d27e3b56760377cd99b3c024913401afb210c701c1555051d5c8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "1e0de3ca424c0283f1494f898d79d3621f05e5fbead675dd042027eb631a62b9",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "175a10fb02ea7db1bb67e31ff1b9c9fcf0d8f5d27014c8d4a34ac4263642d85e",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "ba1f9ff8d5f1c71a3f22873935dbb24ea998e8226731ba24f005ab8089bbaa1b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "fc0effc98f6219c7e1b334994b95e0db1094179ea2e4c42ba027f30ca4256a63",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "ec5ae9fc58125c301bf9a7dcf209afdb401ce56002b3269f393a9a13a971bcaf",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "44c6cb526fa4dcf523a176f7ac54f2cc6dbd293b01064cb7db926401bf90d3e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "ccdef85be1bbbd5f3b4a16537be9ba5a802da689dd9feee77448f4f170d35ded",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "3cabf22766af8108f0701cbf44fcef513498be5a143f4af1064688580b56f6ee",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "cce3594f9f0b69303bc7e0b875b058b72da5847b2eaf5f249b39887edd2f1e3e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "30e83e3d1af466e340d58d0b9c03ee15c96c000a601d3d2b7745cb00d33c585d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "c0c0d71293ad99909fcec1581d97a0c953a40cdb317dc1749517994029d7374b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "66e31c67fa948e6ebb12bd8b6149e03835894c98de34e3c482a81b5889867495",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "401d5b41dd44201da5a6de23d959c17863cc6906819b421432fdec9094fbb7b1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "fc51141aaec46acddcf4e4367634180ae609dfe22615ce4da1aff69072a2e974",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "03f31cf1b8c08701a7738a277d8057a1cabfb525c2f848e88a8865b00d04f481",
          "withoutMetadata": "f728445696e5211bc6dbfb8372cd2a027a04fbf3888d3defd4ff012b711f0f6b",
          "linkedWithoutMetadata": "f728445696e5211bc6dbfb8372cd2a027a04fbf3888d3defd4ff012b711f0f6b"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "5e641e63d3dcc601110986d7b06d4f80a80de17b4da1c21d4cd951205590f4a3",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "056c18979eea154ad10542ccffc6e10a0304bad16eeab7619c8904055016cd2a",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "450a4aa15b6922ebe34620053a84a6340e9b634da9f0d01ef81835995afbf451",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "b20db7f53ad556ef1266d4d01dde3c9a5391d7b4a7078485ad447f5004adce50",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "11f0efb82f7ba2498e51ccb9cf9d19213100f896c7adf25fcb1cb24724912e42",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "4ba032d72df1da76127727a412d146040dfa11d41bfc57e7b375f5c0d27114a3",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "5f451f718e9ae566307d54c61e5b4a4adf77cb3eb873d9b1105b22e62e6dc532",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "7324e0fb439e80b188a48b40218f414241c8b4bbddf3c9027eb2fb9cf38686c8",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "0b720447c28e09345b50876e3552a90f270f1517d45e319f5bab5714daadb820",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "9e893834f1f42d47c45a354dea0c3a97e27a39c6365f61d253d77760815a9fbb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "b142653b51f326e13edf742f18993866c80c2ce3ecce4d2483fc53fce4c5d319",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "461873189739bdd2a7322649769de8ffb2c7513cfcfd5319b82eac4478c3fcfa",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:25",
        "version": {
          "withMetadata": "aa4ebda4a22166a2039dca304268c941ea65d559dde0491594d62f4b83cc4e44",
          "withoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727",
          "linkedWithoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:34"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "fd1eaf49f1cdcf7e58cf229e4b62d7d98ad71c9bf0193929ca95ede000486d90",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)10906_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)10906_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:22",
        "version": {
          "withMetadata": "e451c6e4b8a25b35da997e58abe466361a764aaff176037cd6980fbe846c13d0",
          "withoutMetadata": "c5deaa97cee5bb305e4e3bd482457975038865b5e5edca615a3ac19ed024cc11",
          "linkedWithoutMetadata": "c5deaa97cee5bb305e4e3bd482457975038865b5e5edca615a3ac19ed024cc11"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "2303c6173455555c79780783857b3e184442d1dfc6f98631ba2cb6b2de1e8496",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "471e6ca8d113dc5ec9cf0561bdb2da57e592fcba5c36c073979dd8dcf444354e",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "f902c1f50e9d797134c358ac783b67ee607ab98561139626aa750555f54374f7",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "de11ee5d0e65b4029f1806775dc1e762b90ed00f8cc25112b3203cb6ac5cdd13",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:5",
        "version": {
          "withMetadata": "8ebebb5be43115946d6b018c08dbcbecd4e3175942d7a89119708fb8a42cecd3",
          "withoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca",
          "linkedWithoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A": {
        "src": "src/test/ERC721A.sol:36",
        "version": {
          "withMetadata": "7325e25399e4529a84bcbe2d1efcc1d5546bca740765a44bd9b05bddc0902b7f",
          "withoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847",
          "linkedWithoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847"
        },
        "inherit": [
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "src/test/ERC721A.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "src/test/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/FreeToMintNft.sol:FreeToMintNft": {
        "src": "src/test/FreeToMintNft.sol:7",
        "version": {
          "withMetadata": "7cd8bb697e6f621df1e4b7fcf800011f54c56ee8e5f5141df39c34acb6f34bc6",
          "withoutMetadata": "7cd8bb697e6f621df1e4b7fcf800011f54c56ee8e5f5141df39c34acb6f34bc6",
          "linkedWithoutMetadata": "7cd8bb697e6f621df1e4b7fcf800011f54c56ee8e5f5141df39c34acb6f34bc6"
        },
        "inherit": [
          "src/test/ERC721A.sol:ERC721A",
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "()",
          "tokenURI(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeToMintNft",
            "src": "src/test/FreeToMintNft.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseExtension",
            "src": "src/test/FreeToMintNft.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            },
            {
              "label": "baseExtension",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "FreeToMintNft",
              "src": "src/test/FreeToMintNft.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/IERC721A.sol:IERC721A": {
        "src": "src/test/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "910f27b3b87f4b9ed0c4d9220317cb52d680eda816e41ccfc5e5c4177f75e850",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "6d88f81225e7255c8fb4ca7a838909f7b7a0ec3dad0773e34296c8db5b30e2b7",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/Nft.sol:Nft": {
        "src": "src/test/Nft.sol:6",
        "version": {
          "withMetadata": "3efa0320e81a552ae99d0cc2507dde12ee5e22530980ff5c1d774a21628bebf5",
          "withoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1",
          "linkedWithoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Nft",
            "src": "src/test/Nft.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "649a3c025348302bfae279166ae949844db2e0d10c4fee4871add56379651c12",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "fcd96d15c26c63c6ebc72acee4bf4f84e06cb9f9a17834fc556531b1868f28b7",
          "withoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801",
          "linkedWithoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addPrime(address,uint256)",
          "removePrime(uint256)",
          "setBurnPercentage(uint8)",
          "withdraw(address,uint256)",
          "withdrawNFT(address,uint256)",
          "execute(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "primes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:23"
            },
            {
              "label": "burnPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage": {
              "label": "struct Treasury.PrimeInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)2597": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_struct(PrimeInfo)18306_storage": {
              "label": "struct Treasury.PrimeInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC721)2597",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "d9b941610236ad2f68612b9253bc47c7a31dc449f3651a93e78f73ec72a00ae7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "87042e4221a2510f2775c7f06ab56c20b76d9150102e1e463705430615a0c447",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "9dee0ae9805df5780dbc432eac81b7d758d05ea1b9f26ac2b8e1fbe0f052d020",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "9d4c6eb5eb81d24e61c2db6987f5ac990394bdf8f4583822b9bad0f3b293ad1b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "aadb3cbf3e0b0cc7059939d4f79fecfbeac004ff48c13b1fc100067e736a9666",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "a16b8fa905ed6a1aae3392801f34f53b14dee2d06778cbd42df9f0e467bab3a4",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8c593abed76badb1e73c8d40e8820c8252f09b4a37f2cb68a72bcf91353872a8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "c8aa3d6413a6fb417a9ae619b054737eb3914bbfaac9b8d7a57ba5d24eb89991",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "944b4307aa52be5757963be2af87267d78de7601c4b75d91361212491b7e87b2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "3b1431e4309c921144374d13d8edd29fe617d387a3a5c8f79dcf587863778cc6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "6e1cc90d8571c25e67d1b92ff3878a281dc5e2287e6e58c0f1057fe1556250b2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "d8b46109390094c57465e04e3bdd6e30347932de866b9b043dd6d76576f9e5ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "d5425c95ca6fe29541bd7c02dc4d429e05ca7db6406d36a7a427e981205c19c9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "84f7aab8e0c78818b2848701bf4ec7f5a58b4ee4f4ba46714924f24863febaa7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "a50ca30d4f0f4d986b5d9e496368436d02a1ce48e46ada490c81245baf72db44",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "9e73bf613657aaa0589d773fd0eb54d6376ece5b2500d26e56fe88b3d75c7d1f",
          "withoutMetadata": "b354b5f14e0aae470f2c166fd152d77b02a6efe706fe6eaea16bdf081d54a21c",
          "linkedWithoutMetadata": "b354b5f14e0aae470f2c166fd152d77b02a6efe706fe6eaea16bdf081d54a21c"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "a9dc4c0ed6e90beb82bc4ec7581a3f5c353daad58fe37c6d0bf477b47f1da76b",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "ab687094c2cf822fbbd3172f7cc49225169dc1b9975188233f085fff34a8e6fa",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "a10a212da37cf4ad974777485a35c16820e6027bacbe4fab68ceae986cc9cf85",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "83c5e58271ceed5243f5e947e04325823df8e85d6d4d03ccbff81b0ddb3ce6da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "c5613ea4d50a65e13e046694b7d5b4b4bb178a30e2c912ca3dbfe2f4f1e10bd1",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "24bcaaaf82816b75dad0c5e6a417a862b64bcb98603a80ce30a53bb4ebce0425",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "c6a0e89c94f0a8549d4c88b02fc8f8d8d708dff2cc71fb708e391cbe47f970d2",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "2e9bbbbeea84872e06d9b8cff9c9b32e64c8dc646e2dba7e6cb50ea8ff8f8fa4",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "6e33b37141769f98922349289e3a40fb02a889aa1cfd93fe1e55a94a4d1f5d5e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "c39ac63f3e59f706c5d954f8a9071e6752e77f0698a4df1f1d9c60de72277a21",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "66b29c5b692f7f41e0b72a89573726651f873f78c63fa6da6660007039c66992",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "e08414a0b34196fb0e08237af8af5f4b864362402cd6ba583cd739b0726f652d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:25",
        "version": {
          "withMetadata": "72645e57189ca83e9f9b64080c4dcffca1b83d2f94d59c29d826c719252d96b9",
          "withoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727",
          "linkedWithoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:34"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "30a8d26325be6c62db64f1f744299f8006a29842b6a7403734f96fcff8173987",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)10906_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)10906_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:22",
        "version": {
          "withMetadata": "ad8dc879a5283d905afae6a863bb16417136add721fe3f31686d7f6110150d2f",
          "withoutMetadata": "c3b07d39f88aa0216503ae4ba76a4446478817aa05faddc1c471762eb120d902",
          "linkedWithoutMetadata": "c3b07d39f88aa0216503ae4ba76a4446478817aa05faddc1c471762eb120d902"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "747e0cc434177cf8f46c45ab0577d7cceb7a4eb1daee4f3fddf671e33fe10cdd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "b99689efaf093fb3dd4d9e72979c521c0a363bd0afc57c1263d8a2f64a049988",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "f627606f95f6dc1e99d9f606b4eba71cd5de8a6609067ea851a844e75f00a12f",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "5b15c90ab267c336d66b7817d0c051590b9d10df2dbd641286c346096924c41f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:5",
        "version": {
          "withMetadata": "1bcb2d35f722692947f1822ce768a7befea96e713e5ada5feb571fec403dacfe",
          "withoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca",
          "linkedWithoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A": {
        "src": "src/test/ERC721A.sol:36",
        "version": {
          "withMetadata": "6f1e1140dd11eda25a1fab59787ac8cc3aab3c76a87460205d742b47292d4e3d",
          "withoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847",
          "linkedWithoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847"
        },
        "inherit": [
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "src/test/ERC721A.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "src/test/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/FreeToMintNft.sol:FreeToMintNft": {
        "src": "src/test/FreeToMintNft.sol:7",
        "version": {
          "withMetadata": "19cfe1406c519e5149274e1c0ae11364381309e9ef64bee6e6bd71b7753564d5",
          "withoutMetadata": "19cfe1406c519e5149274e1c0ae11364381309e9ef64bee6e6bd71b7753564d5",
          "linkedWithoutMetadata": "19cfe1406c519e5149274e1c0ae11364381309e9ef64bee6e6bd71b7753564d5"
        },
        "inherit": [
          "src/test/ERC721A.sol:ERC721A",
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "()",
          "tokenURI(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeToMintNft",
            "src": "src/test/FreeToMintNft.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseExtension",
            "src": "src/test/FreeToMintNft.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            },
            {
              "label": "baseExtension",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "FreeToMintNft",
              "src": "src/test/FreeToMintNft.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/IERC721A.sol:IERC721A": {
        "src": "src/test/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "dfb1977ceaf8a3ab0af1c55b9c424efb60b83b09789e1806f0570ec389fa55fd",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "66145c4b84e6f6e34b1a7ab45f024987f0f6e3ae3b341249edd67f4dc50afbda",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/Nft.sol:Nft": {
        "src": "src/test/Nft.sol:6",
        "version": {
          "withMetadata": "8948c58d2293cc1b7b894f42d1b6167ad2dc59014db70053aff7346d32ee8151",
          "withoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1",
          "linkedWithoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Nft",
            "src": "src/test/Nft.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "917f8876f8c461d8965c184707713d017059b436879dfc0f77244cfe7b5a2a01",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "a55d0da8745b597af85aaaef739ed168844ae103db7b254f5a27a706f40e0a70",
          "withoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801",
          "linkedWithoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addPrime(address,uint256)",
          "removePrime(uint256)",
          "setBurnPercentage(uint8)",
          "withdraw(address,uint256)",
          "withdrawNFT(address,uint256)",
          "execute(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "primes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:23"
            },
            {
              "label": "burnPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage": {
              "label": "struct Treasury.PrimeInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)2597": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_struct(PrimeInfo)18306_storage": {
              "label": "struct Treasury.PrimeInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC721)2597",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "f18a3236e6ee014e2879d6ed130810e850bc164d0fcc9b5482d62bea132d4510",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "db159c1c57d8f1be74accf6706e72c87d59ce3ef57c7c538c9d7268f39fe4197",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "7262ce9db38fe516d4cfb5e05a3aaa7b4d6aefba337573c13f37b23fb10dd998",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "08d0f8ac6c1cf5d9103efa99e7d6a5f1bace19f3843f3ad9d023bbd610c5aebd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "649ff8efd37ce85301fa26f08a533ae652bf454cb5f19af8e5eb340ccfe50ab4",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "ccf51ad90acf60a1a73b8a2784c7e48ec7a09ea738081686a35a45275b6807f5",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "d419965e71762265d16a21062968e26a331a73bf5f7c1e0e1acc0418a62e8953",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "ff71cdffa1a65a4ac1a6cbcdc18888c1188789b21ec2147e5f3b2a5ab0fe17c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "8c6b6f190faed0b4f8f9c303074ff79b36e4289cf98480433956e3e9279db8ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "cbffbca67d0f3198951aae79149e085068b216bf4714ecb53424d6a058afee58",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "688566087326d29da9021a8083da04e96800da8580b044b56b35541e7a427bd3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "b83ca3bb641d83af6707dc26762b9419168292f4122e5bb1df693f4b9ace3198",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "9bbd59d25204ef4320ba3c1b9ae063f65a18105d3b2380597f44e84125230949",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "f2b243e4f4556f893379a180d90f5bb85838f307e891a83babc03d2d8d5d589a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "481da05ea370f3c8889aa168e4bf50f483a4203b7d8a39ca59da4a24d8ba5ffd",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "bc7b91ba61162d98c772cc946a52fdb962f3c4c1a1b98936a5d665302fbca480",
          "withoutMetadata": "d61c425771f04bf3be7d1a15bab5ffb96a975785ee6595944122ee826670ffc7",
          "linkedWithoutMetadata": "d61c425771f04bf3be7d1a15bab5ffb96a975785ee6595944122ee826670ffc7"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "75784859b063dbad5fc797e232f88a77b7d9fe51caedf7da49f4db557d6bdbce",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "073f36510ba28839f295da9d86a6b87aa1bb54a47575769a86fb2f7178d06507",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "567ebfcdea72528e4284a9c9bd6397041f547ac73dbc8b738704b8ef1b00c281",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "4292c608e255b0f2584fe7e4370aa4ca81da7782b2d6e265335bd3ff68811d7e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "87cff6e16810f2f1ac8c7253543492a4641cec82c7155f83aeb5cd2d7398b644",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "2276fde7205595e663fb97307569b2940654d467ce6c3bfaf48a6b69fe21ebdc",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "173fda7afbdc57d2830fba1b92874cb2c9b1ddee6105576d5f21681af38282db",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "dd4d8c5e8e7e60bc4c2b3c1e37f6851b07339280de1dfcc3d48d73a1abbb2960",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "f9aa8e601415cc1f9988ed27b8e8dffa3b5a5f1347c06cde3e6b52010ea1f71e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "360a862cd28432d95c406249f0848209210480161baa9034ebe5808cf8f42d73",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "ff7a7557c54c331040c96f7ad29d56a41c29255a18e762dd40f56345df68ffaa",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "5b07803e9b1709a1e6fbb7aff163eff5bcce069b945c2a2488abfd5a5a80322a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:25",
        "version": {
          "withMetadata": "113cb52fbd62c759fa815ed509add19b62b2adb54cc86e998f40c7aa2d0b97a0",
          "withoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727",
          "linkedWithoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:34"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "f22dc1fe3327c318ede62329caf32d05db58cbacc2af31b6e20c63987fae0189",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)10906_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)10906_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:22",
        "version": {
          "withMetadata": "08d7f6382e144a94b0ebd387042f4bc6c07d197c42770aa89884de381b3c04a7",
          "withoutMetadata": "786a1b9205632c121e24660aab3bb986940004f936b9942a729688d4aa2181a4",
          "linkedWithoutMetadata": "786a1b9205632c121e24660aab3bb986940004f936b9942a729688d4aa2181a4"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "0ca7c9d2306c57e71d57115025b5b28aeb5c7c7fee092192a76bc2e7e1772445",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "40cd0bd12bba1dd03dc9eeca0035b6cb6fbd2db76094cf4eaeb7aabfabe610f0",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "115b97c042c80122ea1212d0c903a1833fc421e4a07350614a2d9bb4bcf5168a",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "50e7c27e626341c35281d151e64d564525ad873dbb05c24c37fb340f54463f92",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:5",
        "version": {
          "withMetadata": "7696be2df64d6c55def3318d977b7cc4867d3131704994b3045140c25f8785c4",
          "withoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca",
          "linkedWithoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A": {
        "src": "src/test/ERC721A.sol:36",
        "version": {
          "withMetadata": "df8f93fe8eb3a1bf2ea5b70a8624f11126b7d37490bd87376f976b6c5d86c45a",
          "withoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847",
          "linkedWithoutMetadata": "d03011ab2ea95a79b6b514e3ce5c2a53bfce55468d3f7f40de4a10a9731f4847"
        },
        "inherit": [
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "src/test/ERC721A.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/ERC721A.sol:ERC721A__IERC721Receiver": {
        "src": "src/test/ERC721A.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/FreeToMintNft.sol:FreeToMintNft": {
        "src": "src/test/FreeToMintNft.sol:7",
        "version": {
          "withMetadata": "bd69359aeb07b63bd98ba2c48e3a514e6c227cd78ab3eae80451660b84a218f0",
          "withoutMetadata": "bd69359aeb07b63bd98ba2c48e3a514e6c227cd78ab3eae80451660b84a218f0",
          "linkedWithoutMetadata": "bd69359aeb07b63bd98ba2c48e3a514e6c227cd78ab3eae80451660b84a218f0"
        },
        "inherit": [
          "src/test/ERC721A.sol:ERC721A",
          "src/test/IERC721A.sol:IERC721A"
        ],
        "libraries": [],
        "methods": [
          "()",
          "tokenURI(uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeToMintNft",
            "src": "src/test/FreeToMintNft.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseExtension",
            "src": "src/test/FreeToMintNft.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:98"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:101"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:104"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:107"
            },
            {
              "label": "_packedOwnerships",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:119"
            },
            {
              "label": "_packedAddressData",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:128"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:131"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721A",
              "src": "src/test/ERC721A.sol:134"
            },
            {
              "label": "baseExtension",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "FreeToMintNft",
              "src": "src/test/FreeToMintNft.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenApprovalRef)16209_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenApprovalRef)16209_storage": {
              "label": "struct ERC721A.TokenApprovalRef",
              "members": [
                {
                  "label": "value",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/IERC721A.sol:IERC721A": {
        "src": "src/test/IERC721A.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "aff5be907b87a6b86daffc0f812aadbc3c9f973dce627c425daa0ce02e3e0f50",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "2c3a25f11c8a17045f5fec1aac88b370c1fd9e1f1ef3c2e9eda205f97b7706f4",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/Nft.sol:Nft": {
        "src": "src/test/Nft.sol:6",
        "version": {
          "withMetadata": "b961e6cf59e7c360d7e915db640dbefd1fd92391808a0ed42253ca2a920ffa82",
          "withoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1",
          "linkedWithoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Nft",
            "src": "src/test/Nft.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "82d9a2dbfa9956354686ffc4fc14e1ed84279d649b0554d8206c0aae7041716b",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "753625f26ea04bc61e40c6ea5f5729697a46f7b174dd874c56b25296141085e7",
          "withoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801",
          "linkedWithoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addPrime(address,uint256)",
          "removePrime(uint256)",
          "setBurnPercentage(uint8)",
          "withdraw(address,uint256)",
          "withdrawNFT(address,uint256)",
          "execute(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "primes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:23"
            },
            {
              "label": "burnPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PrimeInfo)18306_storage)dyn_storage": {
              "label": "struct Treasury.PrimeInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)2597": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_struct(PrimeInfo)18306_storage": {
              "label": "struct Treasury.PrimeInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC721)2597",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "3f035882f02786710869373765737476d4c55121206dfb902a1ebaeb1ce693aa",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "eb40ed2932f6e2c2123fe7a409148cd3821fe00f7f5a7676462ee0ea619145a9",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "2b1fbe2a20c517b0b2aadb2e7695c3e07e8ac3407479b7264215454ecd3c0852",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "03781e7540309810aa7e6a2eb1c8d6785b4b7cfe7faf3d6e335f5d038fa0be88",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "2dc7555cdb93975ec8f83fe6a70d2cda0e7bfc694dd059b3308e32d14d52f322",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "9d2a08893fcd7ac0d61f7163af8ce6fa359d68d24ec5319f1cd46e38126f64f7",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "1ffc2d48363af7d86f1a4cf5aeae214bb96533a9ce0384f70077bc36e86be592",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "01bb389f070840dc2ff0af9deeef357b66037dffae67a9a8c635f17cbdc8f04c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "8a6c357eb376bf618c9d99bbc5bf2bd33533c834f674a7c695904018ecf66889",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "fde9d7e0b9f5098bf9bfb03ee7024f8be36436d3c30887b7252470b457248078",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "be3d44d477170433259d6aeca9d0d8721f971ca26d2c3aba838c4d14565b3890",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "7ea73f3460682197ec247d31aa8a55a62d4b2afc65ea25795350c5bf0881d0c9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "aeff8cd31578c11561b398b0230d3552bd5064c7559e7f77d8027c95f535d5bb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "21aa90cfbf7fe7f69a3e586a31cb26a3d90a1f25b9864965c4ef4da02bf1f7b4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "f2c36f16291d30ea149ab504564041856e7a3fb50c6ac11c04bbd8e77e44d4d2",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "67af20aa9f4ab162f697742565965984c98bd242c17b6623cdbf920fade04fc9",
          "withoutMetadata": "ca5e74f52af916d510382c423e0e2c5485c8bc49829df439460f253319ac78af",
          "linkedWithoutMetadata": "ca5e74f52af916d510382c423e0e2c5485c8bc49829df439460f253319ac78af"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "b339ab0530bda8989726a890b7f11c04f57d463d8030c305d20c8dc297d2407a",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "6b91757ee1f8e3a7ed013c60945a3429fb4fed888a93cdb986b45c30b07e4f2e",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "eee3cb3820d01ad1c95195c33997c20c12a75786334e96585ea9f65abe96e8b4",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "5edc65a1d844699a0cc12d5f47d2d7a71ac8e0dbfc2eabda029e719a01636315",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "6d4d011c801bc6482fe7a5e60379660edcc6d026608b379687a8c93c8563aa02",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "85ec72ab8f8e73fb20f8dd19d02dbb4c3e54444965a4cab636c40cfe4724fd1b",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "872e797e082ec3e2703aaf8749b8d0de05e6d40b2457f9a713f7558b18604728",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "9c17a04907bea9802beb8b708660f2d3595218184837d9025e04adff0ed74024",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "dc143de855913324018ccf7c0ccb8f15372c3dc034540a56fda09397a7ece4ab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "40b849ae3a957e2ef948ec90604ee0a24aefc7aee79d9f054794e3c934d7cf0f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "ab56a6f585b447b631fec96c4745d48c37499f81129cab2078c495b41e12fa4a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "f09f93267559678bb6eaecf112b119d613c08eb05e7909c86d990180c45af2c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:25",
        "version": {
          "withMetadata": "bf540c34aaf0cbf9e42170d9cbec42858390cc0356550b11f5c4852a61f402bc",
          "withoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727",
          "linkedWithoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:34"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "7a86cab943f99f4f22ebbf6e23ef544c9e987599d5279e908ed1ce04c4a34595",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)10906_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)10906_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:22",
        "version": {
          "withMetadata": "e390e5ac26243fbe7b5a5c8fde599e4d25c753b23385b8f7168c3468bf789007",
          "withoutMetadata": "1e6a26d93ad247feeb789b1c2e733a949df2eb6283592d5ecbc4156b88f53f83",
          "linkedWithoutMetadata": "1e6a26d93ad247feeb789b1c2e733a949df2eb6283592d5ecbc4156b88f53f83"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "29cc5224aa29cb47ea8eef123bc3c018c396b3997fa67fae96ca99524229484a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "6e4705d9b54e1ee21d38b41e0ec93bee62c831f6c3f0da4d4fbe88b207f9c1d7",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "52aa6d0bf45c134e805d5aec714816933277197eccc9aa3980cb3cede683fb6b",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "fa301ddcc550280cc03f15ff8f6bfc6269edcf8d58fecc87a9ac2dc1f02de2ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:5",
        "version": {
          "withMetadata": "1378c592120fea5610ba32653034245ff5b4c88e198c13682e484efe22f87a5a",
          "withoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca",
          "linkedWithoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "00013b7dfa40fb0364c7d6026d4e330e79244d55a5bb7b45bb39cc3beac96d53",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "363b493d1599ef48131439fe3991d35a1e10a4bd3308c9269883711ff951d194",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/Nft.sol:Nft": {
        "src": "src/test/Nft.sol:6",
        "version": {
          "withMetadata": "f4ca03f7ba11548d035528c9399ab39f9ea726af507a6ca4d568dd8e15fa6a19",
          "withoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1",
          "linkedWithoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Nft",
            "src": "src/test/Nft.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "3764ada6ae5cc10dec8b1c50c64e9181dfb7eadad859797eeeb1997499ed8c63",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "dcf301d3ac7f860e201674b95b13648f34e528c7dc9410d81cf6ea40d19dd17b",
          "withoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801",
          "linkedWithoutMetadata": "f08983579ae463de240583c185965181060238b5de48ae8af4df32c5915fb801"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addPrime(address,uint256)",
          "removePrime(uint256)",
          "setBurnPercentage(uint8)",
          "withdraw(address,uint256)",
          "withdrawNFT(address,uint256)",
          "execute(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "primes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PrimeInfo)16411_storage)dyn_storage",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:23"
            },
            {
              "label": "burnPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PrimeInfo)16411_storage)dyn_storage": {
              "label": "struct Treasury.PrimeInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)2597": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_struct(PrimeInfo)16411_storage": {
              "label": "struct Treasury.PrimeInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC721)2597",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "0898ab2ef8874e9271fe81524391774a2a882f15eed96d3404b20263585dec30",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "edbe3643dbb51ae64321047f1a83542ea56bbb3e9821785a1b1f3b05fe9972e7",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "14bc9b61aed3d2ac60a6e4979c73f29f52f8bfbafd1ac2fd2ba0635065a5d29b",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "bcb5d2b389ebbfb10b6fe20816bb09a574410f4a4b210b61a3d4f6a5d75ec8ad",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "f38486091e10410be6c9515dec00187f73af7319aacd6a021b917ab63a210abb",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "fb38e336595756d517b8740a726c107f6c60d4e441d78d5eb78a11c5c988425d",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "87f8c6bfa6abde9bb40069bdab5ecab7fc461f9bc863d5bd122d25730877cb3f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "96ceb3d5eda956544860c34efa40d3cb228055474529f572f450e46fac2ac7b3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "090249cf72e456f9c9990ba5a33747f2bf89eefe99015d486d54994dfcc0dcd2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "03b9ec257d15d364095735512a38a52650e39a5e6a4fb7bcd918f1aff40988e4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "a63e84e1adee860fea8aa0abef46c6512f9ff327d8a90c916dc2c61bf5e008e5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "52976555be4af7722de44f19894cd715e3418e3dbecccd84e61433af4835fbe0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "f4a0ca4e4bc0b2a4e97f7fd43c86711c1439a0dade286177aabc8bd108946a56",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "a4e71093a4e9e7d1dbb5135f2ee12305eff51a6c8e573dc9a400c90fbeee8c37",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "9c13cde0825df25e4be7785b34bd6651dcf007f3d55b500b36596bb2a2c38d0c",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "77ef4ee16281b67cd2a521cbd2b343ab862ac52f1d38fca115113291bb07c62c",
          "withoutMetadata": "673ad1cda184fb5c48c97b6f507baa1f3d9a18b9b96ad1a5a32346a37cc25405",
          "linkedWithoutMetadata": "673ad1cda184fb5c48c97b6f507baa1f3d9a18b9b96ad1a5a32346a37cc25405"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "8e5dea9115c434b80e9a966a940d6713a8eeb336cb9b8ff255311e50fd3d4113",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "4ab72d11aed355d85a278e405215be9dffebc0cb2a4a2f93661b5a69d054fd55",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "8d0b5ef6c1c690b097562a8b5d581b871f91603af1131cb2d24efd5c45c46b31",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "9bb499cc3a4a8b5f865e05b7d60d9606122aa97e384f6fe579f15f53762805f0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "e3d1dc8f04dd5d6ea9b3f8400140e333a92788932d7a9d5e77c4c5fd298fc093",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "165de28bf9b290d8b511c5127ba0cb716f80b95b37ea357c3c3e0d42d4355480",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "dd98a143d74465dea1a5d007a20b4d3e8540c05447beeb7b3eeaf7680831da0a",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "85144892d5eb2d257902b08b647f6fdfd1ba0f131b85398235b8a55862e12d84",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "e7fc6757452fb2c9eb70222dda68e201501f2891d73d37ecbb05572e4e9d9d21",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "b054b1320046b94634a98feb7349bc8860223554b2120f35c868032ff65391b4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "abafe9ff2125d424426fb80fc185db1cee0489ad9172ec21928a90562d5f688a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "a617b86f309ece323963165b728a97293fb57c870a9ac7bef894cb20058932d2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:25",
        "version": {
          "withMetadata": "1cea8f6bbaeb9ed9069defff1c90dc06ff9e7c1ca30bbeb87748f587c22ffe48",
          "withoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727",
          "linkedWithoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:34"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "a85b59e8e89c639540adf81137a683d4b1b465c9cbe80206251b8aa8023bdabf",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)10906_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)10906_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:22",
        "version": {
          "withMetadata": "5ecaba472e027500f35a94f14bdcd112e6ed0e8e5ee6ffed9fbe27a97b84718f",
          "withoutMetadata": "961013b7345582cbbf30d86f37b6164afa3f635f49987eab59c329d4ad858a91",
          "linkedWithoutMetadata": "961013b7345582cbbf30d86f37b6164afa3f635f49987eab59c329d4ad858a91"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "4a8f3d333316e8a640dfc886233447fd3f9f0d0fb12d1c8325bbaca181d659ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "c36485d6658d7c73bd632839269beec228bc174445dbd15780c6a86fd2becbcc",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "9007660ef94c8112e5cdc254d9dd5855ac1d9b94d0479cbf8ce11f86d24be9e6",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "2588a1888f3a2c6a768bb6041b8ddbac652623079bc05ba9023dd8afd56df2e5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:5",
        "version": {
          "withMetadata": "bf5a1a70dd44e3162f26675b996c4a13df1f00d98d5e76573731ea4c98882011",
          "withoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca",
          "linkedWithoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "5ecf43199cf2b4ef35a937ee8e773aec6083cee22d5fb97ace4910af7850db4b",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "b1ffd6bb4204b70a9e1c4d7e4716c20d152b40eaf825ddd87a58e306afa5a1a6",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/Nft.sol:Nft": {
        "src": "src/test/Nft.sol:6",
        "version": {
          "withMetadata": "d5c46d8a8cbad8919d6ceaffe3c92d19f3fa5d164524da60994a2ce1d3db8167",
          "withoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1",
          "linkedWithoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Nft",
            "src": "src/test/Nft.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "31311af50c82327f1e29db39fed4d560470a37accfcd570dc474e06e3ac832f0",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "345a4960763c34cadb505070618cc9c9c6cedc40c11c1b57b76b62cabfb97203",
          "withoutMetadata": "31038839d9246be198f13ecc99df5a1b8620ef70fc04add685e37979b57db414",
          "linkedWithoutMetadata": "31038839d9246be198f13ecc99df5a1b8620ef70fc04add685e37979b57db414"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addPrime(address,uint256)",
          "removePrime(uint256)",
          "setBurnPercentage(uint8)",
          "withdraw(address,uint256)",
          "withdrawNFT(address,uint256)",
          "execute(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "primes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PrimeInfo)16411_storage)dyn_storage",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:15"
            },
            {
              "label": "burnPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PrimeInfo)16411_storage)dyn_storage": {
              "label": "struct Treasury.PrimeInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)2597": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_struct(PrimeInfo)16411_storage": {
              "label": "struct Treasury.PrimeInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC721)2597",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "8238ef22668692d60c70b5481f80dd6fa309cdfbc0a55de08019c117852531cb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "b6b905673ff92c24034bda651c8f9e0e221982073133e06dc74d933a37203312",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "3eb1024a6fa82dc3ebb1519a20e3bea99083c26e69e6185a333a6cdfce565dbd",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "319366b229076609a6527d00ae2c8694dfdce310edd4c244c3b30bac05148206",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "54b9f7f77a4fa419eca1860ac221daa187096dea0e55a0a0bf33a49be4897dcd",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "65a80f6122c5ff0f592333fac478d5f8d74cea6191e447f3a128a5d7a950898b",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f535a57758e41bf51523baa589fcb23205c514051cf056d0e3275301f16c88d5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "10535df7a79c607a461a73c4546dee5de58add93784d9572bbf61fe04cc09583",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "90e2c3dbba268cd3795b61030f7064ccec174d0b209b2456a4c774c72b1a12d2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "d00bbc3fff0eef62f3a2d7ddf4af90ef2a3d8abe69de534d99903a700a1a2b63",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "32b4059de5f727308fbfedb3b1d6778c20be151220ce3cf98e1ebd4bca148125",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f6e1c7c70701ab43e88075173afd3dfd56228be2cb38b584f7db1660b30ea3d0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "04d59d05026f814cbc94fc8bc5fc9165d5bf9944e9b817a6f34a3839698f466c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "c66d64ea6b26d5127aa3af2743478d0cb645eb5e6e97a9301c8675d92ab4bd08",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "f7f43a3915f92169e7cda4a839c3ec7ff8bf20346eca24b53e1225e841dbfce3",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "cbed0d8a6d9a93e3442fa0dca51dce6d37df2a7cd0fbff6c5f8ac6b025706c7f",
          "withoutMetadata": "bd41bdc17bf7713b44acafefac2743a27443d791620c08de8c6c30fca63ff18c",
          "linkedWithoutMetadata": "bd41bdc17bf7713b44acafefac2743a27443d791620c08de8c6c30fca63ff18c"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "38a89f397f38fda45ce451003a0010a3144cce72ebe32cbc5032fa0449a00220",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "00a162d4e2edaddc941799cc1a4ee029ca78822be594575f0a540e4dfa46fdcb",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "9619b112bb6ee78082a8445b9df27e56ba743c76746105dcb9af12ea5674eccb",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "8863ee2b22cbb57806c66b9762827923e3fa24d05595a90ea58467a948d4441b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "cb3272ab6a7ccebfd0488783d450d97eb9415091beafc8a6747155bb75a05df5",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "7f1215d4e5b3fd421c4b217eedaaa268a6ef3e56b60e82bd05138f8850f16cde",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "0f2ebc84e6467232c6ca65da79ad9f8a66d067bc12d220dc3e2d1ebb3fc19df2",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "dbc437c5d3eb72e267065e93b3a256cd25026ec1f8f7222b33256b2184ef8a8b",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "466d714abba1f9d0ac81798f091df00c96263ad9ab286688269b0e2cf54178d2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "350e97c116934bccab98c44e95aff38a6d252bf6b9c233b2f31d1ae8cb5ef4f0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "458c951a2453bcc8e4fec96dac523586caa953aa8a45f82ba53dd605f507d9eb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "0f20a827652bde572f1e2c6eb82824b5fb0f21fd9952030d400431714fe3fec7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:25",
        "version": {
          "withMetadata": "fbf86f6dbf297c37cfae08ed79c4d2171f325e016b647989c83edd5addf4cc2e",
          "withoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727",
          "linkedWithoutMetadata": "f53a237d56331344ae55514115492e13a928a1701d634b5b375417ad4c1f5727"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:34"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)9477)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "ae82a0b20ff26f53c13f925c5410b31ca66a8ae537505213ae146c979aeedba1",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)10906_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)10906_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)11462_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)9477": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)11462_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)9477",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)11809_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)11809_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)5479_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)5479_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5479_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5479_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5164_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5164_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:22",
        "version": {
          "withMetadata": "2a967f889fdbb2a8c16c4f3885b7823969d9aaf502e9b6c68cfa14e34508a6e1",
          "withoutMetadata": "b9b1b44c2cc2cfea54b7b82ab55856e4c37cb8fcdbeb538a8d2809b8f95075a2",
          "linkedWithoutMetadata": "b9b1b44c2cc2cfea54b7b82ab55856e4c37cb8fcdbeb538a8d2809b8f95075a2"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "850d4ebb2df587b3b3352de0c52a7e9cff12dcc6a7a0e2fcd5281aeb29fd2f01",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "9d51b6f828ab76d4e459836b0139fd8ceaf5bd46b1cf1429f66e55e48816d549",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "80cf92cb2e899b31147e9029ecf2495c67c846dc6e3a0d33774360022769f9fe",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)9565_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)9565_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)9565_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "7f80707475230302835920158235a7faea80bb1cb570ba4ea521262106cb95fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:5",
        "version": {
          "withMetadata": "377809ea130d4098b48362bcffa61cb1e0fa0fb2461c390390c6ae0531f3e56a",
          "withoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca",
          "linkedWithoutMetadata": "85d859d2e393ff689467749fc3e91d897c8474f3256187cd7317db2bdf3cf2ca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "c6e44c95906d38e2b9d1846345834fe5cc22e6d4027f50d7d4833ea72fc90b5d",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "aea7dc0dea5697c89b4859607493a76bebdeec96985f9b12631467a95082ec4e",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/Nft.sol:Nft": {
        "src": "src/test/Nft.sol:6",
        "version": {
          "withMetadata": "c149740b53aa9f69382845cb2b5a04217e8cc75bbee464cce238ecb04f542c86",
          "withoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1",
          "linkedWithoutMetadata": "87eedfafe1fed4dc5c9493bef3473407539085be7ea0510261502896dccf94c1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Nft",
            "src": "src/test/Nft.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "b272be7d2de97b3b2dd80fbc80c5ac9347fdfef91126f389d43c7ddb8af2b6ed",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "e305473a9a647a3dbecaf384ae785a2690c5224d6ce6ac40303c48b6747441ac",
          "withoutMetadata": "31038839d9246be198f13ecc99df5a1b8620ef70fc04add685e37979b57db414",
          "linkedWithoutMetadata": "31038839d9246be198f13ecc99df5a1b8620ef70fc04add685e37979b57db414"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addPrime(address,uint256)",
          "removePrime(uint256)",
          "setBurnPercentage(uint8)",
          "withdraw(address,uint256)",
          "withdrawNFT(address,uint256)",
          "execute(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "primes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PrimeInfo)16411_storage)dyn_storage",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:15"
            },
            {
              "label": "burnPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PrimeInfo)16411_storage)dyn_storage": {
              "label": "struct Treasury.PrimeInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)2597": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_struct(PrimeInfo)16411_storage": {
              "label": "struct Treasury.PrimeInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC721)2597",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "1f09875b232be28776344d2b31c7c131531b943a56674f336a3ae6e24f831a8e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "bee61026409ddba827175c3bf1b2a7c01e14054c940e3be015a044d16e854f22",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "c74b79c962cdb80976e1501f8e675659aa5fd4b05d2c431cc84d1f8760216533",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "c2f38aab65ed64838c333511d2427483fa72fea00a32b31d5a946e9887ded422",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "07ea5004034ab80e7c4c4339aeed7babc8d76a59e51849db378eed4884832019",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8410f553abfc76873995f322cd90c089de1cbb5306628c61b439a2991271eadc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "5811560c973ac06d262f1dee31335ae46fa8a9360cc30e7f5a1a3ca05177c680",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "82727e747f769e788072f9b45c0cb91f65334e9368c57362f08699d68936ddd8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "26d158eb7f5ca2904b6eb61591b08f546eb5a0bc12a1247c91f9524619c0913a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "d185607b656efbdbb2467d9f93928ada3be32ad93e06559828c5f2fa7b9b4e98",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "032d1fc72f8894d4e48dadb2d475386ed1d38ccc7492f0933faefc1fd52ccf2e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "829bb5a3a7d145221799560acfd132a0d21b45750595877e54d6e6856c7150b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "f77e00f3155bdf92169a49a64953fc529188da2c5088deecc91635c4e3724333",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6267520f288d6fd3b08ed4d8b489f0b16ee70031d59dd2d30a04b8907c55bf6e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "e43ca569edd21b18c25f243073f2212101fae648249918aed84705c4d01c86e4",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "2ad4b3b39a3ca304c5ba126b4468fd31f4a70d84c1d93e32791d560031d3fad6",
          "withoutMetadata": "6f169ec647f26cbf876b972e949a3ae0b0a7363a4c2eae431533d181136f3210",
          "linkedWithoutMetadata": "6f169ec647f26cbf876b972e949a3ae0b0a7363a4c2eae431533d181136f3210"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)4481_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)4481_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)4481_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)4481_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4166_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)4166_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "19fe7213f2818efa63e5000070c0d7652eef718b7b3ff39708cc6835e50d1a7e",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "1b14e5c9657a1905c52394e7cd56531c2ea0e8da7ff58e6390f8e20497d7b846",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "857e108a185d0e8baa477e34201ec541d7f5e9fcba76d272f0ae035fa3563737",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "e9f8e511a3ac856f597f3424fb2478013b641d0144b499dae06ece1f4bb17b27",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "fdc7ad9fc660ffe0b96baf3cb8d6009eb3f745ca90ebaec8b3ac178fbd0fe544",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "3578fe2d579938c777d797bd1a7eb76ce66dd5876c6a15cab7b0dbaed31b1079",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "61aa8881b43f1ca35ece87a2d67a4998c615a487f3a0220d00c4577eb1778d27",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "7ad0f65e1fc074f909b0be6babf3377e0871d5a20c1cd18c54a6aab8d191579f",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "82b42a086e6036d543b01e42b5c238a18efc5688d5244c0e20bad05fc9b9b4e2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "8f58b0ed8f8b1ac278ea8c2d4c70d5337824ef57ee88c29658cb59dabfea9d4b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "5b7f1fefd9993ee45af5a441c654c71d62bfe0b6585dfb97f6b19c5e3a0b2146",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "950450b5b95c609d29a59ecf9f896c475b15abdf67f84060050c18b243656663",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:26",
        "version": {
          "withMetadata": "fe8fd9a33efbd920b04bba0b279f8f2bce573567352862fffa4b41ddd621e447",
          "withoutMetadata": "d0cd4e47c2a4c76efc6ac9941757f9735d2089b1b3a987a8e34c3332d47e946b",
          "linkedWithoutMetadata": "d0cd4e47c2a4c76efc6ac9941757f9735d2089b1b3a987a8e34c3332d47e946b"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)16564)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)16564": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)16564)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "cca351a72e11e3c2f9148d4ff4ba96d740052d6339d86bc370b9eb90c7e1442d",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)18917_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)18570_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)18014_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)16564": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)18570_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)16564",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)16564",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)18014_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)18917_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)18570_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)16564": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)18570_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)16564",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)16564",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)18917_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)18917_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)4481_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)4481_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)4481_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)4481_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4166_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)4166_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:23",
        "version": {
          "withMetadata": "01e47873ff6dabcf6a71285b2034fbfb76f9b4c15de66ef9dff866d953409e5d",
          "withoutMetadata": "042e55475af118b533be705e7ea479d16076247ac5f899da39bfc8f9414ce5ec",
          "linkedWithoutMetadata": "042e55475af118b533be705e7ea479d16076247ac5f899da39bfc8f9414ce5ec"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "hardhat/console.sol:console",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)16652_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)16652_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)16652_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "77df3c867f28fc07f3f9ac42f9871d750331cefaf68032352df081a4a84d0765",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "d79667cc69ba5f679437e64acba6938254d587c1c536006e8f330066eed678b4",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "f2b2388f0e9778f172323653f11a8a26a71941daa8f6945bc49f98fb6f3235ab",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)16652_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)16652_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)16652_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "548841199be7c5308674b6695fa7ca8376a74688ce9a3f878b199c6b0bb9764a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:6",
        "version": {
          "withMetadata": "ef3e995c9af7a899d0ef5970f463d05655dd82aaaab19663a31720814661ce78",
          "withoutMetadata": "dd370c7a0e5c970956b6800ce670863e1ca10c7e3ef75a206c771735544c0f0c",
          "linkedWithoutMetadata": "dd370c7a0e5c970956b6800ce670863e1ca10c7e3ef75a206c771735544c0f0c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "042ef8c911dee61b26112b1cbf5f65a05fff457ab227a4eeb40e72eb5172f1a5",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "679c7dd4b13af2f5b4311475f94053eefe67f671e296fa1365fa02300ccc03fe",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "a5c992521161c796e820b18369b60a70fddc95552cf8e4a01af3bdf2663f2f55",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "fd898e290b4b239fca3640de86252f1b008529aefe79c8cb6befce359ee58b4f",
          "withoutMetadata": "31038839d9246be198f13ecc99df5a1b8620ef70fc04add685e37979b57db414",
          "linkedWithoutMetadata": "31038839d9246be198f13ecc99df5a1b8620ef70fc04add685e37979b57db414"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addPrime(address,uint256)",
          "removePrime(uint256)",
          "setBurnPercentage(uint8)",
          "withdraw(address,uint256)",
          "withdrawNFT(address,uint256)",
          "execute(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "primes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PrimeInfo)23529_storage)dyn_storage",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:15"
            },
            {
              "label": "burnPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PrimeInfo)23529_storage)dyn_storage": {
              "label": "struct Treasury.PrimeInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)1626": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_struct(PrimeInfo)23529_storage": {
              "label": "struct Treasury.PrimeInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC721)1626",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "7c44375d0c567a4537b96db0beba7d12865c62ca99820558876a0fd2b3ae427a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "948388062b86220474c60a94709a3e9c6e03ab900b2a442e030d537fc423cfa5",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "09204fb61c0e179ad206f63552d6bb5f83b815eb7bd44a62eb870e985e1746cc",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "d19cd42359400c7cd382ed1986540896baab38a58f42f80da377b21a924556c1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "0821572c79b307d7bcc8c80d50e6d1bed001f2744ebafe17181a1ba67a72fc68",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "b41f38a8f4f0ed9ab383333eb92e48792c06a06c0e1c56593c66477bfd95b266",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "eb3560274883cf0c78e3bac53da7fa6e5d620b95dfb58fdfe519b60198f41f53",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "c224717144039acdf824a9b79daad1a44f129e9bd3538dcdfcf0c895018a1bce",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "cfff025ab2ba95cabb29d9b0ff3d66feac2344980dc58c3edb0b59e691d7c0ea",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "545f3c9782abf98cf88c2705b9876ba655665acae58daa86abe3a601a95ea4a4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "ca7445fe27787cab519bcf88da73a8ccc90b7f1296892728908a20c85b7cc992",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "506184b5d9ab1d1b519836e72c7e4d8c86c7fd8ae3aee1101c45e01d1ab767f8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "b7f668891538a3897c3e80f3fa9718ebd058a808a71d859976122a9e7bb6e3a9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b8e607fc7306f08de5126f64cee064f4aa09e28ae3aed1078540dbb0b846ae27",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "e6c4e391c035da74a87dc8b3efaa0a46155c69a0c17722f541ce2344bc947b77",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "0fef56f84b6b5d1bd6428801d9f327cea282a7c7f74442fe33d07617a08b0628",
          "withoutMetadata": "b99678389cb31b8fd063a778dbd56155144c7bf37183295198d1c058ad25098f",
          "linkedWithoutMetadata": "b99678389cb31b8fd063a778dbd56155144c7bf37183295198d1c058ad25098f"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)4481_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)4481_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)4481_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)4481_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4166_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)4166_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "f5617641165b7ef8df3ab9d0a97e92346f92f1926e90516730be935b99a2163c",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "dca9cf010c298610038bea46e417549e78e005363c966f01851a52a0f07588b9",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "34c31b3c16dadebb90ba78b03fbfbf33c7c8cdb7e9f74caf5efc5eb0225aabdf",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "5d64cf2c5bcf4629ef39bec772c80f05ac3385a6ac3b75b77914d9c4b1cf93a3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "62f3669108fd9f7ddf821c07103e5d4d5a2faebf711e4fb65a9ce4208edb6507",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "e3c966bff6bfafa1ce6e79352b7d7eb4419009b5e6b80495c5b44757dbffd924",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "f8211a6d6db9764ec1131fe2136d49f94aaf018adb9290383748ea663b820ff8",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "174622e51b71666e03f5ed569072848ffdd7c28b767156ab267de887d1f3f22f",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "ce63610110b41be5ed256ecd227d52de7063a8ea53a52b313b9f585958636a26",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "62a6083613a509bdd43730a2d9a6afd6ace057bfad77d425c4db27a7595f765e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "c5a22f4bd7012d0522cda3ed01def23c72a7c99bdc8f854c7fb3d0099cb3cc40",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "3d0c28c25811568116e211a1d7f2bffad1b36071e0d1aea1c25fae52f8cb3953",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:26",
        "version": {
          "withMetadata": "9d0d3002ce5ab8ceab372a8a3f261b6040fb77f4c3e41dc85ed040c3e98a69de",
          "withoutMetadata": "d0cd4e47c2a4c76efc6ac9941757f9735d2089b1b3a987a8e34c3332d47e946b",
          "linkedWithoutMetadata": "d0cd4e47c2a4c76efc6ac9941757f9735d2089b1b3a987a8e34c3332d47e946b"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)16564)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)16564": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)16564)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "6e69b0b91b9b76026832ee2871ef4fb2209014f4c3459a3d8f5a1b6df914cafc",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)18917_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)18570_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)18014_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)16564": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)18570_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)16564",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)16564",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)18014_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)18917_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)18570_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)16564": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)18570_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)16564",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)16564",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)18917_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)18917_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)4481_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)4481_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)4481_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)4481_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4166_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)4166_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:23",
        "version": {
          "withMetadata": "09c40c203c6c5b6e1a36760a887ca2a107e6b4fd592370fc1e197d35864dbf3c",
          "withoutMetadata": "ed4f3e788a883ebb0994133e325d81c21f7dca55a17f785c05cc7f3109722f21",
          "linkedWithoutMetadata": "ed4f3e788a883ebb0994133e325d81c21f7dca55a17f785c05cc7f3109722f21"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "hardhat/console.sol:console",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)16652_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)16652_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)16652_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "260d296eb4c5c5561e4afe387ed3a0fb3345608b57cbb5fb360a555fa770cca9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "047a8b5ff8a6a33d612ca26a4f255e86bc86fb845f83fef03d1db62792eb90b8",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "68cad7d4b77ab1f436c702738bac6cf08b0f00e746c33e776ebccfe81c0e633a",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)16652_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)16652_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)16652_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "d3eba91f4b51b02907bfeaea27f6f2c3700c4a9e04beeff6b4942a311cf1e434",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:6",
        "version": {
          "withMetadata": "8169fb683ee02c8bc0c8ddbe0a315accd8fc2399237c9031f8082fc509a1a43e",
          "withoutMetadata": "dd370c7a0e5c970956b6800ce670863e1ca10c7e3ef75a206c771735544c0f0c",
          "linkedWithoutMetadata": "dd370c7a0e5c970956b6800ce670863e1ca10c7e3ef75a206c771735544c0f0c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "23fb3d322ecff3efa022124699a41c236cd732e2d71189f09aa1cb0d176bb916",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "bcf8761897bfbabec399cb29d7f17a6d3d88fc11333d14e5072b98077108e3fe",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "100ea70c40ee4ccbbde68a293f7e0e35a9d91833ea491431a684453d5947427c",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "3d8ba52267ef6e5ab90924d24b252c48094ee64c95dab56b986f1972c147f694",
          "withoutMetadata": "ef4a492cf80ed6f8b55af123093987e83ce2c43b1f76528db43758d0a19fa506",
          "linkedWithoutMetadata": "ef4a492cf80ed6f8b55af123093987e83ce2c43b1f76528db43758d0a19fa506"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "addPrime(address,uint256)",
          "removePrime(uint256)",
          "setBurnPercentage(uint8)",
          "withdraw(address,uint256)",
          "withdrawNFT(address,uint256)",
          "execute(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "primes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(PrimeInfo)23529_storage)dyn_storage",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:15"
            },
            {
              "label": "burnPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PrimeInfo)23529_storage)dyn_storage": {
              "label": "struct Treasury.PrimeInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)1626": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_struct(PrimeInfo)23529_storage": {
              "label": "struct Treasury.PrimeInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC721)1626",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "07056fe6d23bb823cf7bfb534ee03b31256c06babf82a0d31f6d5b0a0576fd5b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "b78ef8f7212d1aeae652721336361f2d2012902fd57007b4c6a37900436632f8",
          "withoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309",
          "linkedWithoutMetadata": "66f3ff72709525f877571119434fd1cd3f6e931c6ba647f2b671aff6c0f8b309"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "4a4d279a36ed343d301f7d0392a6d2c13968e264784b2ffe519c186fddc28bb3",
          "withoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052",
          "linkedWithoutMetadata": "4d1ccbed3484c1395cdcf128bb9c74a5b486bff5f67ae9364cba971c2dfcb052"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "d8077fca7cfbed9c8ea263f719f481acee9e5d995fc7b12a5144718a1187465d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "e9abf2ff497412116343675c2222b69332c89a1b68dcbfa7b0a6c75b14e3567a",
          "withoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863",
          "linkedWithoutMetadata": "48f764fd33284db78af932214e17b35a0d5c8bcae60d9c231d60ee4bbab08863"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "3fe754e06656f87d222aadf9e36aac9c9407c27958e4d72466f6b021121da045",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "f3d8599cef3c065277314fe823a6e03fdce5dd7e2c72e0519747f0a5abe9c574",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "2c1767e5c8b757936477d1bfca5b00296b3cfb32623977e0a6df00ed94ed7226",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "cc513525e0e533fbc032e5dad075f2ae8d3c453e69840968df26256358ba71a2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "632b7e32e3b0092eddee1a74dac399818eb24ad1feb94ae9dd4172a47831c94f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "37b72b56ba1768837ee7656b7d23570a23e314677d79a53575e718176cb371c1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "1f62c5a4507e53f91f9ca09a5e0198e73036c2b998f38fe55fdaef1b8dd3ca49",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "47e9b2b62f6118eb7f2ef917996715d1693b87f2cf200753a57fc156d0ff1a58",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "0aa3c77be013aef6fc75b3ba04fa83b00443f093107ae99516e073de6ebd3993",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "b272053eb28ae414bf5a6fd34eb6270f70b9ead02518111f445fd7d4947713a9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccount.sol:BicAccount": {
        "src": "src/smart-wallet/BicAccount.sol:32",
        "version": {
          "withMetadata": "a512ccc915355dc242cbc428ecb773a9e127570f15fc008e4336897b383c897c",
          "withoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca",
          "linkedWithoutMetadata": "32d4b9b9ed3388a894fe3ce875c565759cb9d08499421731003c750706cf5fca"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccount.sol:BaseAccount",
          "src/smart-wallet/interface/IAccount.sol:IAccount",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/eip/ERC1271.sol:ERC1271",
          "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "(address,address)",
          "initialize(address,bytes)",
          "supportsInterface(bytes4)",
          "entryPoint()",
          "getDeposit()",
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "isValidSignature(bytes32,bytes)",
          "execute(address,uint256,bytes)",
          "executeBatch(address[],uint256[],bytes[])",
          "addDeposit()",
          "withdrawDepositTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccount",
            "src": "src/smart-wallet/BicAccount.sol:62"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "src/smart-wallet/BicAccount.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypointContract",
            "src": "src/smart-wallet/BicAccount.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/BicAccountFactory.sol:BicAccountFactory": {
        "src": "src/smart-wallet/BicAccountFactory.sol:28",
        "version": {
          "withMetadata": "62c7b2002a1b0fd3d534b2ffcc299cfb85a5b77c8234ec319d45d541551356aa",
          "withoutMetadata": "102e47137a76c3a2d028189020ae2fc529dd39a4248c5f32870f767a1a84f76f",
          "linkedWithoutMetadata": "102e47137a76c3a2d028189020ae2fc529dd39a4248c5f32870f767a1a84f76f"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable",
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions",
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata",
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata",
          "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory",
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "changeRecoveryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BicAccountFactory",
            "src": "src/smart-wallet/BicAccountFactory.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)4893_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)4893_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            },
            {
              "label": "recoveryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BicAccountFactory",
              "src": "src/smart-wallet/BicAccountFactory.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)4893_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)4893_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4578_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)4578_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/eip/ERC1271.sol:ERC1271": {
        "src": "src/smart-wallet/eip/ERC1271.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/Multicall.sol:Multicall": {
        "src": "src/smart-wallet/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "c4d978c0b3f61bbbd5a617d25bfac975012e5ac5865009552d529c42a50ba847",
          "withoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76",
          "linkedWithoutMetadata": "11a3613f2b3ef80b5030f15afb8cdde427b4fe4b80b19f11394179cf0a934d76"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions": {
        "src": "src/smart-wallet/extension/interface/IAccountPermissions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "src/smart-wallet/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall": {
        "src": "src/smart-wallet/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions": {
        "src": "src/smart-wallet/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissions": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:39",
        "inherit": [
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "src/smart-wallet/extension/interface/IAccountPermissions.sol:IAccountPermissions"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage"
        ],
        "methods": [
          "setAdmin(address,bool)",
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "isAdmin(address)",
          "isActiveSigner(address)",
          "getPermissionsForSigner(address)",
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)",
          "getAllSigners()",
          "getAllActiveSigners()",
          "getAllAdmins()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:53"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:AccountPermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/AccountPermissions.sol:11",
        "version": {
          "withMetadata": "ee1874973f5770ac6977330c244b53df7aa0e3c070c33293668aed20dc83c7f3",
          "withoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720",
          "linkedWithoutMetadata": "49ff780ddae727a11640e74afe8f61d384242bbf28a1ddc66eddc6f7f8bda720"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadata": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:35",
        "inherit": [
          "src/smart-wallet/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage"
        ],
        "methods": [
          "setContractURI(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:ContractMetadataStorage": {
        "src": "src/smart-wallet/extension/upgradeable/ContractMetadata.sol:17",
        "version": {
          "withMetadata": "03f45a051eac3b1648668c63f36cb5490581255202973db49d32ab9524124d04",
          "withoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162",
          "linkedWithoutMetadata": "e63b0b5f7d96c883e4c30d05b6703c1c07ac6b4eac3a6d91a2fa593dad52c162"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:6",
        "version": {
          "withMetadata": "d45867c2468d12d8d7490f8c720b7c05e368ebce478dd88149795f6f527d3b83",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Initializable.sol:Initializable": {
        "src": "src/smart-wallet/extension/upgradeable/Initializable.sol:25",
        "inherit": [],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Initializable.sol:InitStorage",
          "src/smart-wallet/lib/TWAddress.sol:TWAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:34",
        "version": {
          "withMetadata": "f83d3b42f17cdc8a0e5b940d84a7af1e7ea0c0f4b52ab7ed1ac6d6dfccfcef5d",
          "withoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803",
          "linkedWithoutMetadata": "a2ed72c5d57340610f002887b08f3fb26180606a0669156f76f4a559613ce803"
        },
        "inherit": [
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage",
          "src/smart-wallet/lib/TWStrings.sol:TWStrings"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/Permissions.sol:PermissionsStorage": {
        "src": "src/smart-wallet/extension/upgradeable/Permissions.sol:14",
        "version": {
          "withMetadata": "c7f579bebc517f50b9d9d7a6fe179d43fa407a47192db114f947616ab7d14e84",
          "withoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca",
          "linkedWithoutMetadata": "d4c1853ee38a006b7cc79e535824b312412d7d0d9acb69e95a03c0cf79bccaca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:46",
        "version": {
          "withMetadata": "3f957dedc43839541ec6b9e12bca66980222da1460149f9c0037adfd6bf4040d",
          "withoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be",
          "linkedWithoutMetadata": "7fa054ce19960a8aeac876e12b6dc48a2303c4e60545c35edba6431a1a40c7be"
        },
        "inherit": [
          "src/smart-wallet/extension/upgradeable/Permissions.sol:Permissions",
          "src/smart-wallet/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "src/smart-wallet/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [
          "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage"
        ],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:PermissionsEnumerableStorage": {
        "src": "src/smart-wallet/extension/upgradeable/PermissionsEnumerable.sol:15",
        "version": {
          "withMetadata": "c890ff4a9a60921b6e3c5f70e482e40694be5fb5b5368cc3936e5c9f161e9370",
          "withoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4",
          "linkedWithoutMetadata": "c77adede1cd3b088da93abf1a418c62f960054519d6196444899515b411593c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccount.sol:IAccount": {
        "src": "src/smart-wallet/interface/IAccount.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory": {
        "src": "src/smart-wallet/interface/IAccountFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAccount(address,bytes)",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "accountImplementation()",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IAggregator.sol:IAggregator": {
        "src": "src/smart-wallet/interface/IAggregator.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateSignatures(struct UserOperation[],bytes)",
          "validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "aggregateSignatures(struct UserOperation[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint": {
        "src": "src/smart-wallet/interface/IEntrypoint.sol:17",
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/INonceManager.sol:INonceManager": {
        "src": "src/smart-wallet/interface/INonceManager.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IOracle.sol:IOracle": {
        "src": "src/smart-wallet/interface/IOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IPaymaster.sol:IPaymaster": {
        "src": "src/smart-wallet/interface/IPaymaster.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/IStakeManager.sol:IStakeManager": {
        "src": "src/smart-wallet/interface/IStakeManager.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/interface/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/interface/TWAddress.sol:9",
        "version": {
          "withMetadata": "8c2de2bf543c35a49f2472d050b55c121cfbca45c43739dd033b065c47357358",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/interface/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/BytesLib.sol:BytesLib": {
        "src": "src/smart-wallet/lib/BytesLib.sol:14",
        "version": {
          "withMetadata": "58f40ca6c67075076a03df6f8569230b0c5de19193d6192c7569bca561a15b4e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWAddress.sol:TWAddress": {
        "src": "src/smart-wallet/lib/TWAddress.sol:9",
        "version": {
          "withMetadata": "2907f12bba1e6862cb124374d887b4d3222be12c457ad69d73ba6bcb0d50b890",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "src/smart-wallet/lib/TWAddress.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/lib/TWStrings.sol:TWStrings": {
        "src": "src/smart-wallet/lib/TWStrings.sol:9",
        "version": {
          "withMetadata": "5fd7fd2aefe993247a73b972ddb76554e3f419e0afad47b0cae94db1deeb7003",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/DepositPaymaster.sol:DepositPaymaster": {
        "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:26",
        "version": {
          "withMetadata": "37b01c77ed20cfa8b7da5f32824c74647c7fba18ed62c7f0b2b3ddb1a6a8711d",
          "withoutMetadata": "d0cd4e47c2a4c76efc6ac9941757f9735d2089b1b3a987a8e34c3332d47e946b",
          "linkedWithoutMetadata": "d0cd4e47c2a4c76efc6ac9941757f9735d2089b1b3a987a8e34c3332d47e946b"
        },
        "inherit": [
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(address)",
          "addToken(address,address)",
          "addDepositFor(address,address,uint256)",
          "depositInfo(address,address)",
          "unlockTokenDeposit()",
          "lockTokenDeposit()",
          "withdrawTokensTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DepositPaymaster",
            "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)16976)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:35"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:36"
            },
            {
              "label": "unlockBlock",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DepositPaymaster",
              "src": "src/smart-wallet/paymaster/DepositPaymaster.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)1073": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IOracle)16976": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_contract(IOracle)16976)": {
              "label": "mapping(contract IERC20 => contract IOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_contract(IERC20)1073,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/TokenPaymaster.sol:TokenPaymaster": {
        "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:28",
        "version": {
          "withMetadata": "bf1c8b923b7e88ad4194880925a4a84cb80bc09192b38104b5b08c4f2895b949",
          "withoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72",
          "linkedWithoutMetadata": "e9794d78176253a3567b3c39cd94f701cb7f9dfba97d33937a41f4d2878f0b72"
        },
        "inherit": [
          "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper",
          "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper",
          "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,(uint256,uint256,uint256,uint256),(address,address,bool,bool,bool,uint256,uint256),(uint256,uint24,uint8),address)",
          "setTokenPaymasterConfig((uint256,uint256,uint256,uint256))",
          "setUniswapConfiguration((uint256,uint24,uint8))",
          "withdrawToken(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenPaymaster",
            "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(UniswapHelperConfig)19329_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            },
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(OracleHelperConfig)18982_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            },
            {
              "label": "tokenPaymasterConfig",
              "offset": 0,
              "slot": "11",
              "type": "t_struct(TokenPaymasterConfig)18426_storage",
              "contract": "TokenPaymaster",
              "src": "src/smart-wallet/paymaster/TokenPaymaster.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)16976": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)18982_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)16976",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)16976",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenPaymasterConfig)18426_storage": {
              "label": "struct TokenPaymaster.TokenPaymasterConfig",
              "members": [
                {
                  "label": "priceMarkup",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minEntryPointBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refundPostopCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceMaxAge",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UniswapHelperConfig)19329_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/OracleHelper.sol:OracleHelper": {
        "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateCachedPrice(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleHelper",
            "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "cachedPrice",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:44"
            },
            {
              "label": "cachedPriceTimestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:47"
            },
            {
              "label": "oracleHelperConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(OracleHelperConfig)18982_storage",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:49"
            },
            {
              "label": "tokenOracleDecimalPower",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:52"
            },
            {
              "label": "nativeOracleDecimalPower",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OracleHelper",
              "src": "src/smart-wallet/paymaster/utils/OracleHelper.sol:55"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IOracle)16976": {
              "label": "contract IOracle",
              "numberOfBytes": "20"
            },
            "t_struct(OracleHelperConfig)18982_storage": {
              "label": "struct OracleHelper.OracleHelperConfig",
              "members": [
                {
                  "label": "tokenOracle",
                  "type": "t_contract(IOracle)16976",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nativeOracle",
                  "type": "t_contract(IOracle)16976",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenToNativeOracle",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "tokenOracleReverse",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "nativeOracleReverse",
                  "type": "t_bool",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "priceUpdateThreshold",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "cacheTimeToLive",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/paymaster/utils/UniswapHelper.sol:UniswapHelper": {
        "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToWei(uint256,uint256)",
          "weiToToken(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapHelper",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswap",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "wrappedNative",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tokenDecimalPower",
            "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniswapHelperConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(UniswapHelperConfig)19329_storage",
              "contract": "UniswapHelper",
              "src": "src/smart-wallet/paymaster/utils/UniswapHelper.sol:34"
            }
          ],
          "types": {
            "t_struct(UniswapHelperConfig)19329_storage": {
              "label": "struct UniswapHelper.UniswapHelperConfig",
              "members": [
                {
                  "label": "minSwapAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uniswapPoolFee",
                  "type": "t_uint24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccount.sol:BaseAccount": {
        "src": "src/smart-wallet/utils/BaseAccount.sol:16",
        "inherit": [
          "src/smart-wallet/interface/IAccount.sol:IAccount"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib"
        ],
        "methods": [
          "getNonce()",
          "entryPoint()",
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BaseAccountFactory.sol:BaseAccountFactory": {
        "src": "src/smart-wallet/utils/BaseAccountFactory.sol:25",
        "inherit": [
          "src/smart-wallet/extension/Multicall.sol:Multicall",
          "src/smart-wallet/extension/interface/IMulticall.sol:IMulticall",
          "src/smart-wallet/interface/IAccountFactory.sol:IAccountFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/proxy/Clones.sol:Clones",
          "src/smart-wallet/lib/BytesLib.sol:BytesLib"
        ],
        "methods": [
          "createAccount(address,bytes)",
          "onRegister()",
          "onSignerAdded(address)",
          "onSignerRemoved(address)",
          "isRegistered(address)",
          "getAllAccounts()",
          "getAddress(address,bytes)",
          "getAccountsOfSigner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseAccountFactory",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountImplementation",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entrypoint",
            "src": "src/smart-wallet/utils/BaseAccountFactory.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allAccounts",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)4893_storage",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:35"
            },
            {
              "label": "accountsOfSigner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(AddressSet)4893_storage)",
              "contract": "BaseAccountFactory",
              "src": "src/smart-wallet/utils/BaseAccountFactory.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)4893_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)4893_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)4578_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)4578_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/BasePaymaster.sol:BasePaymaster": {
        "src": "src/smart-wallet/utils/BasePaymaster.sol:16",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "src/smart-wallet/interface/IPaymaster.sol:IPaymaster"
        ],
        "libraries": [],
        "methods": [
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)",
          "postOp(uint8,bytes,uint256)",
          "deposit()",
          "withdrawTo(address payable,uint256)",
          "addStake(uint32)",
          "getDeposit()",
          "unlockStake()",
          "withdrawStake(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasePaymaster",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "entryPoint",
            "src": "src/smart-wallet/utils/BasePaymaster.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Entrypoint.sol:EntryPoint": {
        "src": "src/smart-wallet/utils/Entrypoint.sol:23",
        "version": {
          "withMetadata": "c0fa986798603834bd3a19e110c99774cd7af2ee50a6a41535cba4c791116928",
          "withoutMetadata": "98160a4f469e474d2e61c95f339f7d79fac2e577962e9e4e0701da953f6a1809",
          "linkedWithoutMetadata": "98160a4f469e474d2e61c95f339f7d79fac2e577962e9e4e0701da953f6a1809"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "src/smart-wallet/utils/NonceManager.sol:NonceManager",
          "src/smart-wallet/utils/StakeManager.sol:StakeManager",
          "src/smart-wallet/interface/IEntrypoint.sol:IEntryPoint",
          "src/smart-wallet/interface/INonceManager.sol:INonceManager",
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [
          "src/smart-wallet/utils/UserOperation.sol:UserOperationLib",
          "hardhat/console.sol:console",
          "src/smart-wallet/utils/Exec.sol:Exec"
        ],
        "methods": [
          "handleOps(struct UserOperation[],address payable)",
          "handleAggregatedOps(struct IEntryPoint.UserOpsPerAggregator[],address payable)",
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)",
          "innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)",
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))",
          "getSenderAddress(bytes)",
          "_validateSenderAndPaymaster(bytes,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "senderCreator",
            "src": "src/smart-wallet/utils/Entrypoint.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)17064_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            },
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositInfo)17064_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)17064_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/Exec.sol:Exec": {
        "src": "src/smart-wallet/utils/Exec.sol:9",
        "version": {
          "withMetadata": "3e00d0199a6752dc828fbaefd14bf59a70c3835527f74360fe5eef00ab53832f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/NonceManager.sol:NonceManager": {
        "src": "src/smart-wallet/utils/NonceManager.sol:9",
        "version": {
          "withMetadata": "0b821dbaec2567100ebb53d684d58b9167e21b5d7c04c34fbf960fad3ff02478",
          "withoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef",
          "linkedWithoutMetadata": "a0c384bd570513e82a37309d393fc737166e5db9ebfae6de45f6cbdfc75369ef"
        },
        "inherit": [
          "src/smart-wallet/interface/INonceManager.sol:INonceManager"
        ],
        "libraries": [],
        "methods": [
          "getNonce(address,uint192)",
          "incrementNonce(uint192)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nonceSequenceNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint192,t_uint256))",
              "contract": "NonceManager",
              "src": "src/smart-wallet/utils/NonceManager.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint192,t_uint256))": {
              "label": "mapping(address => mapping(uint192 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint192,t_uint256)": {
              "label": "mapping(uint192 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint192": {
              "label": "uint192",
              "numberOfBytes": "24"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/SenderCreator.sol:SenderCreator": {
        "src": "src/smart-wallet/utils/SenderCreator.sol:8",
        "version": {
          "withMetadata": "59f541b1b4ef5e560fb3705b45d08472f9d0e04dc70a3bd77ec2127c437b7d15",
          "withoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf",
          "linkedWithoutMetadata": "f49436ee1d3e63a4e1eec1dbe7f38c1a945787b5ebaedc6b35fb4737bbeea7bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createSender(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/StakeManager.sol:StakeManager": {
        "src": "src/smart-wallet/utils/StakeManager.sol:13",
        "inherit": [
          "src/smart-wallet/interface/IStakeManager.sol:IStakeManager"
        ],
        "libraries": [],
        "methods": [
          "getDepositInfo(address)",
          "balanceOf(address)",
          "()",
          "depositTo(address)",
          "addStake(uint32)",
          "unlockStake()",
          "withdrawStake(address payable)",
          "withdrawTo(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(DepositInfo)17064_storage)",
              "contract": "StakeManager",
              "src": "src/smart-wallet/utils/StakeManager.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DepositInfo)17064_storage)": {
              "label": "mapping(address => struct IStakeManager.DepositInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositInfo)17064_storage": {
              "label": "struct IStakeManager.DepositInfo",
              "members": [
                {
                  "label": "deposit",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "stake",
                  "type": "t_uint112",
                  "offset": 15,
                  "slot": "0"
                },
                {
                  "label": "unstakeDelaySec",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawTime",
                  "type": "t_uint48",
                  "offset": 4,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/smart-wallet/utils/UserOperation.sol:UserOperationLib": {
        "src": "src/smart-wallet/utils/UserOperation.sol:39",
        "version": {
          "withMetadata": "ad6fb26decb4ecb757461065deffe2a0f67a90d1a9f9641ba92896f405656587",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/BMToken.sol:BMToken": {
        "src": "src/test/BMToken.sol:6",
        "version": {
          "withMetadata": "0106deb51a6531a0029d3dc86ae1a0d4161b73c9a782aef3a2ed92db31151550",
          "withoutMetadata": "dd370c7a0e5c970956b6800ce670863e1ca10c7e3ef75a206c771735544c0f0c",
          "linkedWithoutMetadata": "dd370c7a0e5c970956b6800ce670863e1ca10c7e3ef75a206c771735544c0f0c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BMToken",
            "src": "src/test/BMToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockOracle.sol:MockOracle": {
        "src": "src/test/MockOracle.sol:6",
        "version": {
          "withMetadata": "0679a8a0348ebeb5fba32fdaaf39ce754154da6cc08bc2f3d2cf2acaf09cfca2",
          "withoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1",
          "linkedWithoutMetadata": "fa9d0449f6904793ab4b558ccdec64ea79cc8142e9c53e65fc20bcacf40e6fd1"
        },
        "inherit": [
          "src/smart-wallet/interface/IOracle.sol:IOracle"
        ],
        "libraries": [],
        "methods": [
          "getTokenValueOfEth(uint256)",
          "decimals()",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/MockSwapRouter.sol:MockSwapRouter": {
        "src": "src/test/MockSwapRouter.sol:7",
        "version": {
          "withMetadata": "296ce0ae25d754194870292b4ddabdaa6b6b1a22f81927fd3ea1424639c76b1c",
          "withoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c",
          "linkedWithoutMetadata": "2024f568440fd58ed3dfa519d8ccbb92974f3bec2d3574a16891d956b0fafc3c"
        },
        "inherit": [
          "@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))",
          "refundETH()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/test/WrapEth.sol:WrapEth": {
        "src": "src/test/WrapEth.sol:6",
        "version": {
          "withMetadata": "2cae53c6db8f25b0c99058a2a9011985896e5c460ba20efa3da862459719781b",
          "withoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed",
          "linkedWithoutMetadata": "fd7818ca7f404993a5ee13434ee90094aeca6ca7ce4395fa7e0e29635d4056ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WrapEth",
            "src": "src/test/WrapEth.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/Treasury.sol:Treasury": {
        "src": "src/treasury/Treasury.sol:9",
        "version": {
          "withMetadata": "b75088fc0baae74ef105d12f79692c2a4524325d934a53e17a830ba58dec73a3",
          "withoutMetadata": "061d3b3b9881e4398d1c589054235abfd5f8f6a99c459b82699e40d02b5a392e",
          "linkedWithoutMetadata": "061d3b3b9881e4398d1c589054235abfd5f8f6a99c459b82699e40d02b5a392e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "submitMerkleRoot(bytes32)",
          "isClaimed(uint256)",
          "claim(uint256,address,address,uint256,bytes32[])",
          "setApproveToken(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:10"
            },
            {
              "label": "claimedBitMap",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Treasury",
              "src": "src/treasury/Treasury.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "src/treasury/interface/IERC20Burnable.sol:IERC20Burnable": {
        "src": "src/treasury/interface/IERC20Burnable.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    }
  ]
}